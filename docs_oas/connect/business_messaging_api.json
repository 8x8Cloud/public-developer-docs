{
  "openapi": "3.0.0",
  "info": {
    "title": "Business Messaging API",
    "version": "1",
    "description": "This API is for sending messages in Messaging Apps like WhatsApp, Viber, RCS and Line. It also provides the ability to manage templates and export logs.",
    "contact": {
      "name": "8x8 Inc",
      "url": "https://cpaas.8x8.com",
      "email": "cpaas-support@8x8.com"
    },
    "termsOfService": "https://cpaas.8x8.com/sg/terms-and-conditions/"
  },
  "servers": [
    {
      "url": "https://chatapps.8x8.com",
      "description": "Asia-Pacific region"
    },
    {
      "url": "https://chatapps.us.8x8.com",
      "description": "North America region"
    },
    {
      "url": "https://chatapps.8x8.uk",
      "description": "Europe region"
    },
    {
      "url": "https://chatapps.8x8.id",
      "description": "Indonesia region"
    }
  ],
  "tags": [
    {
      "name": "Send Message API"
    },
    {
      "name": "Management API"
    },
    {
      "name": "Reporting API"
    },
    {
      "name": "Webhook Configuration API"
    },
    {
      "name": "File Upload API"
    }
  ],
  "paths": {
    "/api/v1/subaccounts/{subAccountId}/messages": {
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
        }
      ],
      "post": {
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/post/responses/200/content/application~1json/schema"
                },
                "examples": {
                  "response": {
                    "value": {
                      "umid": "82188ee0-109f-e811-8150-020897df5459",
                      "user": {
                        "msisdn": "+6512341234"
                      },
                      "clientMessageId": "1234_id",
                      "status": {
                        "state": "queued",
                        "timestamp": "2021-01-04T08:19:45.99Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "operationId": "Send-Message",
        "summary": "Send message",
        "tags": ["Send Message API"],
        "parameters": [
          {
            "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "user": {
                    "msisdn": "+6500000000"
                  },
                  "clientMessageId": "1234_id",
                  "type": "Image",
                  "content": {
                    "text": "Welcome to Singapore!",
                    "url": "https://pbs.twimg.com/media/Dd8E0yjV0AYdxd4.jpg",
                    "fallbackText": "We tried to send an image - but Welcome to Singapore",
                    "sms": {
                      "encoding": "AUTO",
                      "source": "SENDERID"
                    }
                  }
                },
                "properties": {
                  "user": {
                    "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/post/requestBody/content/application~1json/schema/properties/user"
                  },
                  "clientMessageId": {
                    "type": "string",
                    "description": "Client managed id for the message : your own unique reference",
                    "maxLength": 50,
                    "example": "abc-123"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "text",
                      "audio",
                      "video",
                      "image",
                      "location",
                      "file",
                      "interactive",
                      "template"
                    ],
                    "description": "Messaging Apps message content type.\nAllowed values are \"text\", \"image\", \"audio\", \"video\", \"file\", \"location\", \"interactive\" and \"template\". \nIf the type is \"text\", then content object should contain a \"text\" parameter. \nIf the type is \"image\", \"audio\", \"video\" or \"file\", then content object should contain a \"url\" parameter and all other parameters can be used.\nIf the type is \"location\", then content object should contain a \"latitude\", \"longitude\" parameters.\nIf the type is \"interactive\", then content object should contain an \"interactive\" parameter\nIf the type is \"template\", then content object should contain a \"template\" parameter.",
                    "example": "Text",
                    "title": "Content type"
                  },
                  "content": {
                    "type": "object",
                    "description": "Content of the message",
                    "title": "Content",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "Message body - the text of the message\n",
                        "maxLength": 35000,
                        "example": "Hello"
                      },
                      "url": {
                        "type": "string",
                        "description": "Public URL of where the rich content is stored.",
                        "format": "uri",
                        "example": "http://example.com"
                      },
                      "fallbackText": {
                        "type": "string",
                        "description": "In case SMS fallback is triggered, message body - the text of the message",
                        "maxLength": 35000,
                        "example": "you can check your account by http://example.com"
                      },
                      "sms": {
                        "type": "object",
                        "description": "If the SMS fallback is triggered, here are the SMS settings",
                        "properties": {
                          "encoding": {
                            "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/post/requestBody/content/application~1json/schema/properties/smsFallback/properties/encoding"
                          },
                          "source": {
                            "type": "string",
                            "description": "Source number (SenderId) - \"From\" field for SMS. Max length 16 chars.",
                            "maxLength": 16,
                            "example": "Info"
                          }
                        },
                        "title": "SMS content settings"
                      },
                      "location": {
                        "type": "object",
                        "description": "Location object. Required for \"location\" type",
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "example": 12.345,
                            "description": "Latitude"
                          },
                          "longitude": {
                            "type": "number",
                            "example": 12.345,
                            "description": "Longitude"
                          },
                          "name": {
                            "type": "string",
                            "example": "Pablo Morales",
                            "description": "Text that will appear below the generic map at the top of the message"
                          },
                          "address": {
                            "type": "string",
                            "example": "1 Hacker Way, Menlo Park, CA 94025",
                            "description": "Address that will appear below the generic map at the top of the message"
                          }
                        },
                        "required": ["latitude", "longitude"],
                        "title": "Location data"
                      },
                      "interactive": {
                        "type": "object",
                        "description": "This is an interactive message. Type and Action are required properties",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "button",
                            "enum": [
                              "button",
                              "list",
                              "product",
                              "product_list",
                              "cta_url"
                            ],
                            "description": "The type of interactive message you want to send."
                          },
                          "action": {
                            "type": "object",
                            "description": "Action you want the user to perform after reading the message.",
                            "properties": {
                              "button": {
                                "type": "string",
                                "description": "Required for List Messages.\n\nButton content. It cannot be an empty string and must be unique within the message. Emojis are supported, markdown is not.",
                                "maxLength": 20
                              },
                              "buttons": {
                                "type": "array",
                                "description": "Required for Reply Buttons.",
                                "maxItems": 3,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "reply",
                                      "enum": ["reply"],
                                      "description": "Type of button"
                                    },
                                    "reply": {
                                      "type": "object",
                                      "description": "The id and title properties are required.",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "maxLength": 256,
                                          "description": "Unique identifier for your button. This ID is returned in the webhook when the button is clicked by the user."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "Button title. It cannot be an empty string and must be unique within the message. Emojis are supported, markdown is not.",
                                          "maxLength": 20
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "catalog_id": {
                                "type": "string",
                                "description": "Required for Single Product Messages and Multi-Product Messages.\n\nUnique identifier of the Facebook catalog linked to your WhatsApp Business Account."
                              },
                              "product_retailer_id": {
                                "type": "string",
                                "description": "Required for Single Product Messages and Multi-Product Messages.\n\nUnique identifier of the product in a catalog."
                              },
                              "sections": {
                                "type": "array",
                                "minItems": 1,
                                "maxItems": 10,
                                "description": "Array of section objects. ",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "rows": {
                                      "type": "array",
                                      "description": "Required for List Messages.\n\nContains a list of rows. You can have a total of 10 rows across your sections.\n\nThe id and title properties are required.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "maxLength": 200
                                          },
                                          "title": {
                                            "type": "string",
                                            "maxLength": 24
                                          },
                                          "description": {
                                            "type": "string",
                                            "maxLength": 72
                                          }
                                        }
                                      }
                                    },
                                    "product_items": {
                                      "type": "array",
                                      "description": "Required for Multi-Product Messages.\n\nArray of product objects. There is a minimum of 1 product per section and a maximum of 30 products across all sections.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "product_retailer_id": {
                                            "type": "string",
                                            "description": "Required for Multi-Product Messages. Unique identifier of the product in a catalog. The product_retailer_id property is required."
                                          }
                                        }
                                      }
                                    },
                                    "title": {
                                      "type": "string",
                                      "maxLength": 24,
                                      "description": "Required if the message has more than one section.\n\nTitle of the section."
                                    }
                                  }
                                }
                              },
                              "parameters": {
                                "type": "object",
                                "description": "Required for Call-to-Action Url (`cta_url`) Messages.",
                                "properties": {
                                  "display_text": {
                                    "type": "string",
                                    "description": "CTA Url button label text.",
                                    "maxLength": 20
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "URL to load in the device's default web browser when tapped by user."
                                  }
                                }
                              }
                            }
                          },
                          "header": {
                            "type": "object",
                            "description": "Header content displayed on top of a message. You cannot set a header if your interactive object is of product type.",
                            "properties": {
                              "document": {
                                "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema/properties/content/properties/interactive/properties/header/properties/text"
                              },
                              "image": {
                                "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema/properties/content/properties/interactive/properties/header/properties/text"
                              },
                              "text": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Required when type is audio, document, image, sticker, or video and you are not using a link.\n\nThe media object ID. Do not use this field when message type is set to text."
                                  },
                                  "link": {
                                    "type": "string",
                                    "description": "Required when type is audio, document, image, sticker, or video and you are not using an uploaded media ID (i.e. you are hosting the media asset on your server).\n\nThe protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs."
                                  },
                                  "caption": {
                                    "type": "string",
                                    "description": "Describes the specified image, document, or video media.\n\n\nDo not use with audio or sticker media."
                                  },
                                  "filename": {
                                    "type": "string",
                                    "description": "Describes the filename for the specific document. Use only with document media.\n\nThe extension of the filename will specify what format the document is displayed as in WhatsApp."
                                  },
                                  "provider": {
                                    "type": "string",
                                    "deprecated": true,
                                    "description": "This path is optionally used with a link when the HTTP/HTTPS link is not directly accessible and requires additional configurations like a bearer token."
                                  }
                                },
                                "description": ""
                              },
                              "type": {
                                "type": "string",
                                "example": "text",
                                "enum": ["text", "video", "image", "document"],
                                "description": "The header type you would like to use. The type property is required."
                              },
                              "video": {
                                "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema/properties/content/properties/interactive/properties/header/properties/text"
                              }
                            }
                          },
                          "body": {
                            "type": "object",
                            "description": "Optional for type product. Required for other message types.\n\nAn object with the body of the message.",
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "The content of the message. Emojis and markdown are supported. The text property is required.",
                                "maxLength": 1024
                              }
                            }
                          },
                          "footer": {
                            "type": "object",
                            "description": "An object with the footer of the message.",
                            "properties": {
                              "text": {
                                "type": "string",
                                "maxLength": 60,
                                "description": "The footer content. Emojis, markdown, and links are supported. The text property is required."
                              }
                            }
                          }
                        }
                      },
                      "video": {
                        "type": "object",
                        "description": "Video object. Required for \"video\" type",
                        "properties": {
                          "thumbnail": {
                            "type": "string",
                            "example": "http://example.com/video.jpg",
                            "description": "ThumbNail"
                          },
                          "filesize": {
                            "type": "number",
                            "example": 120,
                            "description": "Video File Size (in bytes)"
                          },
                          "duration": {
                            "type": "number",
                            "example": 10,
                            "description": "Duration of video (in seconds)"
                          }
                        },
                        "required": ["thumbnail", "filesize", "duration"],
                        "title": "Video data"
                      },
                      "template": {
                        "type": "object",
                        "description": "Template data. Mandatory for \"template\" message type",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Template name to use",
                            "example": "auto_reply_message_en_us"
                          },
                          "language": {
                            "type": "string",
                            "description": "Template language code to use",
                            "example": "en_US"
                          },
                          "components": {
                            "type": "array",
                            "description": "List of template components",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "default": "body",
                                  "description": "Component type. Possible values are \"header\", \"footer\", \"body\", \"button\", \"carousel\"",
                                  "enum": [
                                    "header",
                                    "footer",
                                    "body",
                                    "button",
                                    "carousel"
                                  ]
                                },
                                "parameters": {
                                  "type": "array",
                                  "description": "Parameters list to use for template placeholders.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Parameter type.\nPossible values are \"text\", \"image\", \"video\", \"document\", \"location\", \"payload\", \"couponCode\".\n\nUse \"payload\" type to define the payload that will be returned when the button in the interactive message is clicked.\n",
                                        "enum": [
                                          "text",
                                          "image",
                                          "video",
                                          "document",
                                          "location",
                                          "payload",
                                          "couponCode"
                                        ]
                                      },
                                      "text": {
                                        "type": "string",
                                        "example": "To be or not to be",
                                        "description": "Text for \"text\" parameter type"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "Required for \"image\", \"video\", \"document\" parameter types.\n\nResource URL.",
                                        "example": "http://example.com"
                                      },
                                      "location": {
                                        "type": "object",
                                        "description": "Required for \"location\" parameter type.\n\nLocation object.",
                                        "properties": {
                                          "latitude": {
                                            "type": "number",
                                            "description": "Latitude",
                                            "example": 12.345
                                          },
                                          "longitude": {
                                            "type": "number",
                                            "example": 12.345,
                                            "description": "Longitude"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Pablo Morales",
                                            "description": "Text that will appear below the generic map at the top of the message"
                                          },
                                          "address": {
                                            "type": "string",
                                            "example": "1 Hacker Way, Menlo Park, CA 94025",
                                            "description": "Address that will appear below the generic map at the top of the message"
                                          }
                                        }
                                      },
                                      "payload": {
                                        "type": "string",
                                        "description": "Required for \"payload\" type.\n\nCustomer-defined payload that will be returned when the button in the interactive message is clicked."
                                      },
                                      "couponCode": {
                                        "type": "string",
                                        "description": "Required for \"couponCode\" type.\n\nThe coupon code to be copied when the customer taps the button."
                                      }
                                    },
                                    "required": ["type"]
                                  }
                                },
                                "index": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 9,
                                  "description": "Required for \"button\" type.\n\nPosition index of the button\nYou can use index values from 0 to 9 to create up to 10 buttons.\nHowever, the Url button type allows a maximum of 2 buttons",
                                  "default": 0
                                },
                                "subType": {
                                  "type": "string",
                                  "description": "Required for \"button\" type.\n\nType of button being created\nValues: QuickReply, Url, CopyCode.",
                                  "enum": ["QuickReply", "Url", "CopyCode"]
                                },
                                "cards": {
                                  "type": "array",
                                  "description": "Required for \"carousel\" type.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "cardIndex": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 9,
                                        "description": "Index of the card in the carousel."
                                      },
                                      "components": {
                                        "type": "array",
                                        "description": "List of card components",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "body",
                                              "description": "Component type. Possible values are \"header\", \"body\", \"button\"",
                                              "enum": [
                                                "header",
                                                "body",
                                                "button"
                                              ]
                                            },
                                            "parameters": {
                                              "type": "array",
                                              "description": "Parameters list to use for template placeholders.",
                                              "items": {
                                                "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema/properties/content/properties/template/properties/components/items/properties/parameters/items"
                                              }
                                            },
                                            "index": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "maximum": 1,
                                              "description": "Required for \"button\" type.\n\nPosition index of the button\nYou can use index values from 0 to 1 to populate up to 2 buttons.",
                                              "default": 0
                                            },
                                            "subType": {
                                              "type": "string",
                                              "description": "Required for \"button\" type.\n\nType of button being created\nValues: QuickReply, Url.",
                                              "enum": ["QuickReply", "Url"]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "suggestions": {
                        "type": "array",
                        "description": "List of suggestioned actions that can be taken by the user for the message",
                        "items": {
                          "description": "Suggestion object. You can only specific either reply or action, not both.",
                          "type": "object",
                          "properties": {
                            "reply": {
                              "description": "Suggest a reply to the message",
                              "type": "object",
                              "properties": {
                                "text": {
                                  "description": "Text content of the reply",
                                  "type": "string",
                                  "maxLength": 25
                                },
                                "postbackData": {
                                  "type": "string",
                                  "description": "The base64-encoded payload that the agent receives in a user event when the user taps the suggested reply.",
                                  "maxLength": 2048
                                }
                              },
                              "required": ["text", "postbackData"]
                            },
                            "action": {
                              "description": "Suggest an action to the message. Only one of the following properties can be specified: dialAction, viewLocationAction, createCalendarEventAction, openUrlAction.",
                              "allOf": [
                                {
                                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema/properties/content/properties/suggestions/items/properties/reply"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "fallbackUrl": {
                                      "type": "string",
                                      "description": "URL that will open in a new window if a mobile device doesn't support a suggested action."
                                    },
                                    "dialAction": {
                                      "type": "object",
                                      "description": "Opens the device's default phone app with the specified phone number filled in.",
                                      "properties": {
                                        "phoneNumber": {
                                          "description": "Phone number to dial, in E.164 format.",
                                          "type": "string"
                                        }
                                      },
                                      "required": ["phoneNumber"]
                                    },
                                    "viewLocationAction": {
                                      "type": "object",
                                      "description": "Opens the device's default map app and selects the specified location or searches around the device's location given an agent-specified query.",
                                      "properties": {
                                        "latLong": {
                                          "description": "The latitude and longitude of the specified location.",
                                          "type": "object",
                                          "properties": {
                                            "latitude": {
                                              "type": "number",
                                              "description": "The latitude in degrees.",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "longitude": {
                                              "type": "number",
                                              "description": "The longitude in degrees.",
                                              "minimum": -180,
                                              "maximum": 180
                                            }
                                          },
                                          "required": ["latitude", "longitude"]
                                        },
                                        "label": {
                                          "description": "Text label of the location opened.",
                                          "type": "string",
                                          "maxLength": 100
                                        },
                                        "query": {
                                          "type": "string",
                                          "maxLength": 200,
                                          "description": "(Optional, only supported on Android Messages clients) Rather than specify a latLong (and optionally, a label), the agent can instead specify a query string. \nFor default map apps that support search functionality (including Google Maps), tapping this suggested action results in a location search centered around the user's current location. \nIf the query is sufficiently specific, then agents can use it to select any location in the world.\n"
                                        }
                                      }
                                    },
                                    "createCalendarEventAction": {
                                      "type": "object",
                                      "description": "Opens the device's default calendar app and creates a new calendar event prefilled with the event data.",
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "Event title.",
                                          "maxLength": 100
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Event description.",
                                          "maxLength": 500
                                        },
                                        "startTime": {
                                          "type": "string",
                                          "description": "Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits. Offsets other than \"Z\" are also accepted. \nExamples: \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\" or \"2014-10-02T15:01:23+05:30\".\n"
                                        },
                                        "endTime": {
                                          "type": "string",
                                          "description": "Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits. Offsets other than \"Z\" are also accepted. \nExamples: \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\" or \"2014-10-02T15:01:23+05:30\".\n"
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "startTime",
                                        "endTime"
                                      ]
                                    },
                                    "openUrlAction": {
                                      "type": "object",
                                      "description": "Opens the specified URL.",
                                      "properties": {
                                        "url": {
                                          "type": "string",
                                          "description": "URL. Must be a valid URI as defined in RFC 3986.",
                                          "maxLength": 2048
                                        },
                                        "application": {
                                          "description": "URL open application, browser or webview. To check whether a user's device supports webview mode, run a capability check first. \nSee the documentation for details: https://developers.google.com/business-communications/rcs-business-messaging/guides/build/capabilities.\n",
                                          "type": "string",
                                          "enum": [
                                            "OPEN_URL_APPLICATION_UNSPECIFIED",
                                            "BROWSER",
                                            "WEBVIEW"
                                          ],
                                          "default": "OPEN_URL_APPLICATION_UNSPECIFIED"
                                        },
                                        "webviewViewMode": {
                                          "description": "View mode for webview",
                                          "type": "string",
                                          "enum": [
                                            "OPEN_URL_WEBVIEW_VIEW_MODE_UNSPECIFIED",
                                            "FULL",
                                            "HALF",
                                            "TALL"
                                          ],
                                          "default": "FULL"
                                        },
                                        "description": {
                                          "type": "string",
                                          "maxLength": 2048,
                                          "description": "Accessibility description for webview."
                                        }
                                      },
                                      "required": ["url"]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "scheduled": {
                    "type": "string",
                    "description": "Date and time when a schedule delivery of the message must happen",
                    "format": "date-time"
                  },
                  "expiry": {
                    "type": "string",
                    "description": "Message Expiry date-time object. If message is not delivered before specified time, it should be trashed",
                    "format": "date-time"
                  },
                  "dlrCallbackUrl": {
                    "type": "string",
                    "description": "Override default DR callback URL for the message",
                    "format": "uri"
                  },
                  "channels": {
                    "type": "array",
                    "description": "Channel fallback override",
                    "items": {
                      "type": "object",
                      "description": "Override default Channel fallback configuration",
                      "properties": {
                        "channel": {
                          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D~1read/post/requestBody/content/application~1json/schema/properties/channel"
                        },
                        "fallbackAfter": {
                          "type": "integer",
                          "description": "Specify the amount of time in seconds, after which message should be sent to next fallback channel, if not delivered to current one.\nMaximum: 1 day",
                          "minimum": 10,
                          "maximum": 86400
                        },
                        "successStatus": {
                          "type": "string",
                          "description": "Enumeration of Success Delivery status",
                          "enum": ["Accepted", "Sent", "Delivered", "Read"],
                          "example": "Delivered",
                          "title": "Success status"
                        }
                      },
                      "required": ["channel"],
                      "title": "Channel override"
                    }
                  }
                },
                "required": ["user", "type", "content"],
                "description": "Messaging Apps API: request model for send single message",
                "title": "Single message request"
              },
              "examples": {
                "whatsAppText": {
                  "summary": "WhatsApp Message - Text Message",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "content": {
                      "text": "Welcome to the world of 8x8 Messaging Apps APIs!\\nCommunications for the customer obsessed."
                    },
                    "type": "text"
                  }
                },
                "whatsAppImageWithText": {
                  "summary": "WhatsApp Message - Image with Text",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "content": {
                      "url": "https://www.example.com/image.jpg",
                      "text": "Welcome to the world of 8x8 Messaging Apps APIs!\\nCommunications for the customer obsessed."
                    },
                    "type": "Image"
                  }
                },
                "whatsAppTemplateTextOnly": {
                  "summary": "WhatsApp Template Message - Text",
                  "value": {
                    "user": {
                      "msisdn": "+650000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "language": "en_GB",
                        "name": "<Insert Template Name>",
                        "components": [
                          {
                            "type": "body",
                            "parameters": [
                              {
                                "type": "text",
                                "text": "12345"
                              }
                            ]
                          },
                          {
                            "type": "Button",
                            "subType": "url",
                            "index": 0,
                            "parameters": [
                              {
                                "type": "text",
                                "text": "12345"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppAuthenticationTemplate": {
                  "summary": "WhatsApp Template Message - Authentication",
                  "value": {
                    "user": {
                      "msisdn": "+650000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "name": "<Insert Template Name>",
                        "language": "en",
                        "components": [
                          {
                            "type": "body",
                            "parameters": [
                              {
                                "type": "text",
                                "text": "12345"
                              }
                            ]
                          },
                          {
                            "type": "Button",
                            "subType": "url",
                            "index": 0,
                            "parameters": [
                              {
                                "type": "text",
                                "text": "12345"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppTemplateWithImage": {
                  "summary": "WhatsApp Template Message - Image",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "language": "en",
                        "name": "<Insert Template Name>",
                        "components": [
                          {
                            "type": "header",
                            "parameters": [
                              {
                                "type": "image",
                                "url": "www.example.com/image.jpg"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppTemplateWithLocation": {
                  "summary": "WhatsApp Template Message - Location",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "language": "en",
                        "name": "<Insert Template Name>",
                        "components": [
                          {
                            "type": "header",
                            "parameters": [
                              {
                                "type": "location",
                                "location": {
                                  "latitude": "38.8693",
                                  "longitude": "-77.0536",
                                  "name": "Metro Station",
                                  "address": "1 Connector Drive"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppDynamicCTAButtonTemplate": {
                  "summary": "WhatsApp Template Message - Click to Action Button",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "name": "<Insert Template Name>",
                        "language": "en_US",
                        "components": [
                          {
                            "type": "body",
                            "parameters": [
                              {
                                "type": "text",
                                "text": "12345"
                              }
                            ]
                          },
                          {
                            "type": "header",
                            "parameters": [
                              {
                                "type": "image",
                                "url": "https://fastly.picsum.photos/id/173/200/300.jpg?hmac=9Ed5HxHOL3tFCOiW6UHx6a3hVksxDWc7L7p_WzN9N9Q"
                              }
                            ]
                          },
                          {
                            "type": "button",
                            "index": 0,
                            "subType": "url",
                            "parameters": [
                              {
                                "type": "text",
                                "text": "samplecta"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppCouponCodeTemplate": {
                  "summary": "WhatsApp Template Message - Coupon Code Button",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "language": "en_US",
                        "name": "<Insert Template Name>",
                        "components": [
                          {
                            "type": "button",
                            "index": "0",
                            "subType": "copyCode",
                            "parameters": [
                              {
                                "type": "couponCode",
                                "couponCode": "25OFF"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppQuickReplyTemplate": {
                  "summary": "WhatsApp Template Message - Quick Reply Button with payload",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "language": "en_US",
                        "name": "<Insert Template Name>",
                        "components": [
                          {
                            "type": "button",
                            "index": "0",
                            "subType": "quickreply",
                            "parameters": [
                              {
                                "type": "payload",
                                "payload": "sample-payload"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppMediaCarouselTemplate": {
                  "summary": "WhatsApp Template Message - Media Carousel with 2 cards",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "template",
                    "content": {
                      "template": {
                        "language": "en_US",
                        "name": "<Insert Template Name>",
                        "components": [
                          {
                            "type": "carousel",
                            "cards": [
                              {
                                "cardIndex": 0,
                                "components": [
                                  {
                                    "type": "header",
                                    "parameters": [
                                      {
                                        "type": "image",
                                        "url": "https://fastly.picsum.photos/id/173/200/300.jpg?hmac=9Ed5HxHOL3tFCOiW6UHx6a3hVksxDWc7L7p_WzN9N9Q"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "button",
                                    "index": 0,
                                    "subType": "url",
                                    "parameters": [
                                      {
                                        "type": "text",
                                        "text": "samplecta"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "cardIndex": 1,
                                "components": [
                                  {
                                    "type": "header",
                                    "parameters": [
                                      {
                                        "type": "image",
                                        "url": "https://fastly.picsum.photos/id/173/200/300.jpg?hmac=9Ed5HxHOL3tFCOiW6UHx6a3hVksxDWc7L7p_WzN9N9Q"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "button",
                                    "index": 0,
                                    "subType": "url",
                                    "parameters": [
                                      {
                                        "type": "text",
                                        "text": "samplecta"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "whatsAppInteractiveMessageReplyButtons": {
                  "summary": "WhatsApp Interactive Message - Quick Reply Buttons",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "interactive",
                    "content": {
                      "interactive": {
                        "action": {
                          "buttons": [
                            {
                              "type": "reply",
                              "reply": {
                                "title": "contact-us",
                                "id": "option-1"
                              }
                            },
                            {
                              "type": "reply",
                              "reply": {
                                "title": "faq",
                                "id": "option-2"
                              }
                            },
                            {
                              "type": "reply",
                              "reply": {
                                "title": "office",
                                "id": "option-3"
                              }
                            }
                          ]
                        },
                        "body": {
                          "text": "Welcome to 8x8 Inc. How may we help?"
                        },
                        "footer": {
                          "text": "This is an official message from 8x8."
                        },
                        "header": {
                          "type": "text",
                          "text": "8x8 Inc."
                        },
                        "type": "button"
                      }
                    }
                  }
                },
                "whatsAppInteractiveMessageCtaUrl": {
                  "summary": "WhatsApp Interactive Message - Call-to-Action Url Button",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "interactive",
                    "content": {
                      "interactive": {
                        "action": {
                          "parameters": {
                            "display_text": "Click for more",
                            "url": "https://developers.facebook.com/docs/whatsapp/cloud-api/messages/interactive-cta-url-messages"
                          }
                        },
                        "body": {
                          "text": "Welcome to 8x8 Inc. How may we help?"
                        },
                        "footer": {
                          "text": "This is an official message from 8x8."
                        },
                        "header": {
                          "type": "text",
                          "text": "8x8 Inc."
                        },
                        "type": "cta_url"
                      }
                    }
                  }
                },
                "whatsAppInteractiveMessageMenuOptions": {
                  "summary": "WhatsApp Interactive Message - Scheduling Menu",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "interactive",
                    "content": {
                      "interactive": {
                        "action": {
                          "button": "Book Slot",
                          "sections": [
                            {
                              "rows": [
                                {
                                  "id": "slot-1",
                                  "title": "Monday, Oct 9",
                                  "description": "9:00 AM - 10:00 AM"
                                },
                                {
                                  "id": "slot-2",
                                  "title": "Monday, Oct 9",
                                  "description": "11:00 AM - 12:00 PM"
                                }
                              ],
                              "title": "Oct 9, 2024"
                            },
                            {
                              "rows": [
                                {
                                  "id": "slot-3",
                                  "title": "Tuesday, Oct 10",
                                  "description": "2:00 PM - 3:00 PM"
                                },
                                {
                                  "id": "slot-4",
                                  "title": "Tuesday, Oct 10",
                                  "description": "4:00 PM - 5:00 PM"
                                }
                              ],
                              "title": "Oct 10, 2024"
                            }
                          ]
                        },
                        "body": {
                          "text": "Looking for personalized assistance? Our Customer Success team has the following slots available. Tap to select a time."
                        },
                        "footer": {
                          "text": "For urgent inquiries, email cpaas-support@8x8.com"
                        },
                        "header": {
                          "type": "text",
                          "text": "Customer Success personalized sessions"
                        },
                        "type": "list"
                      }
                    }
                  }
                },
                "whatsAppInteractiveMessageSingleProduct": {
                  "summary": "WhatsApp Interactive Message - Single Product",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "interactive",
                    "content": {
                      "interactive": {
                        "action": {
                          "catalog_id": "<YourCatalogId>",
                          "product_retailer_id": "<YourProductRetailerId>"
                        },
                        "body": {
                          "text": "8x8 Shirt"
                        },
                        "footer": {
                          "text": "Experience the power of communication with this 8x8 Shirt!"
                        },
                        "type": "product"
                      }
                    }
                  }
                },
                "whatsAppInteractiveMessageProductList": {
                  "summary": "WhatsApp Interactive Message - Catalog of Products",
                  "value": {
                    "user": {
                      "msisdn": "+6500000000"
                    },
                    "type": "interactive",
                    "content": {
                      "interactive": {
                        "action": {
                          "catalog_id": "<YourCatalogId>",
                          "product_retailer_id": "<YourProductRetailerId>",
                          "sections": [
                            {
                              "product_items": [
                                {
                                  "product_retailer_id": "<id>"
                                },
                                {
                                  "product_retailer_id": "<id>"
                                }
                              ],
                              "title": "Section title"
                            }
                          ]
                        },
                        "body": {
                          "text": "8x8 Limited Edition Items"
                        },
                        "footer": {
                          "text": "This collection contains only the finest from 8x8."
                        }
                      }
                    }
                  }
                },
                "viberTextMessage": {
                  "summary": "Viber Text Message - URL",
                  "value": {
                    "user": {
                      "msisdn": "+6500000"
                    },
                    "type": "text",
                    "content": {
                      "text": "Here is your booking reference: ABC1234. For more information, visit https://8x8.com/1234!"
                    }
                  }
                },
                "viberRichMediaImage": {
                  "summary": "Viber Rich Media Message - Image",
                  "value": {
                    "user": {
                      "msisdn": "+6500000"
                    },
                    "type": "image",
                    "content": {
                      "url": "https://www.redbrick.sg/wp-content/uploads/2020/04/coleen-rivas-OZ2rS2zCjNo-unsplash-1125x1500.jpg"
                    }
                  }
                },
                "viberRichMediaVideo": {
                  "summary": "Viber Rich Media Message - Video",
                  "value": {
                    "user": {
                      "msisdn": "+6500000"
                    },
                    "type": "video",
                    "content": {
                      "url": "https://samplelib.com/lib/preview/mp4/sample-5s.mp4",
                      "video": {
                        "filesize": "2700",
                        "duration": "5",
                        "thumbnail": "https://sample-videos.com/img/Sample-jpg-image-50kb.jpg"
                      }
                    }
                  }
                },
                "viberRichMediaFile": {
                  "summary": "Viber Rich Media Message - File",
                  "value": {
                    "user": {
                      "msisdn": "+6500000"
                    },
                    "type": "file",
                    "content": {
                      "url": "https://www.clickdimensions.com/links/TestPDFfile.pdf"
                    }
                  }
                },
                "viberRichMediaTextButton": {
                  "summary": "Viber Rich Media Message - Text and Call-to-action button",
                  "value": {
                    "user": {
                      "msisdn": "+6500000"
                    },
                    "type": "buttons",
                    "content": {
                      "text": "Hello Jessie,\\n\\nYour order #420007 has been processed and is now ready for pickup at our MBS store. \\n\\nFor your convenience, the store is open from 9am to 9pm. We look forward to seeing you!\\n\\nBest,\\nThe Snackbar Team",
                      "button": {
                        "caption": "Get Directions to Store",
                        "action": "https://maps.google.com/?q=Your+Store+Location"
                      }
                    }
                  }
                },
                "viberRichMediaTextImage": {
                  "summary": "Viber Rich Media Message - Text and Image",
                  "value": {
                    "user": {
                      "msisdn": "+650000"
                    },
                    "type": "buttons",
                    "content": {
                      "text": "Hello Mr Jobs,\\n\\nDont miss our upcoming summer sale! Starting next Monday, enjoy up to 20% off on selected apple-based products.\\n\\nBest,\\nThe Grocerio Team",
                      "url": "https://www.abc.net.au/reslib/201408/r1320712_18276029.jpg",
                      "button": {
                        "caption": "",
                        "action": ""
                      }
                    }
                  }
                },
                "viberRichMediaTextImageButton": {
                  "summary": "Viber Rich Media Message - Text, Image, and Call-to-action button",
                  "value": {
                    "user": {
                      "msisdn": "+6500000"
                    },
                    "type": "buttons",
                    "content": {
                      "text": "🎉 Successful Purchase! 🎉\\n\\nHello Ana,\\n\\nThank you for purchasing your Singapore OCBC Skyway ticket! Your ticket is now confirmed and ready for use.\\n\\n📅 Date: October 15, 2023\\n⏰ Time: 3:00 PM - 4:00 PM\\n🎫 Ticket ID: SKY98723\\n\\nTo view your e-ticket, click the button below.",
                      "url": "https://www.redbrick.sg/wp-content/uploads/2020/04/coleen-rivas-OZ2rS2zCjNo-unsplash-1125x1500.jpg",
                      "button": {
                        "caption": "View E-ticket",
                        "action": "https://ocbcskyway.com/e-ticket/SKY1234"
                      }
                    }
                  }
                },
                "zaloNotificationSampleMessage": {
                  "summary": "Zalo Template Message - Text",
                  "value": {
                    "user": {
                      "msisdn": "+84123456789"
                    },
                    "clientMessageId": "<optionalClientMessageId>",
                    "type": "template",
                    "content": {
                      "template": {
                        "name": "<insertTemplateId>",
                        "language": "en",
                        "components": [
                          {
                            "type": "body",
                            "parameters": [
                              {
                                "type": "text",
                                "text": "Ana"
                              },
                              {
                                "type": "text",
                                "text": "Messaging Apps"
                              },
                              {
                                "type": "text",
                                "text": "24 August 2023"
                              },
                              {
                                "type": "text",
                                "text": "29012398"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "zaloNotificationOTPMessage": {
                  "summary": "Zalo Template Message - OTP",
                  "value": {
                    "user": {
                      "msisdn": "+84123456789"
                    },
                    "clientMessageId": "<optionalClientMessageId>",
                    "type": "template",
                    "content": {
                      "template": {
                        "name": "<insertTemplateId>",
                        "language": "en",
                        "components": [
                          {
                            "type": "body",
                            "parameters": [
                              {
                                "type": "text",
                                "name": "otp",
                                "text": "23124"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "rcsTextMessageWithReplySuggestions": {
                  "summary": "RCS Text Message with Reply Suggestions",
                  "value": {
                    "user": {
                      "msisdn": "+84123456789"
                    },
                    "type": "text",
                    "content": {
                      "text": "Hello! How can I help you today?",
                      "suggestions": [
                        {
                          "reply": {
                            "text": "I need help",
                            "postbackData": "help_request"
                          }
                        }
                      ]
                    }
                  }
                },
                "rcsTextMessageWithActionsSuggestions": {
                  "summary": "RCS Text Message with Actions Suggestions",
                  "value": {
                    "user": {
                      "msisdn": "+84123456789"
                    },
                    "type": "text",
                    "content": {
                      "text": "Hello! How can I help you today?",
                      "suggestions": [
                        {
                          "action": {
                            "text": "Call us",
                            "postbackData": "call_action",
                            "dialAction": {
                              "phoneNumber": "+1234567890"
                            }
                          }
                        },
                        {
                          "action": {
                            "text": "Visit website",
                            "postbackData": "website_action",
                            "openUrlAction": {
                              "url": "https://example.com",
                              "application": "BROWSER",
                              "webviewViewMode": "FULL",
                              "description": "Visit our website"
                            }
                          }
                        },
                        {
                          "action": {
                            "text": "View location",
                            "postbackData": "location_action",
                            "viewLocationAction": {
                              "latLong": {
                                "latitude": 37.7749,
                                "longitude": -122.4194
                              },
                              "label": "Our Office"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "Messaging Apps API: request model for send single message"
        },
        "description": "This endpoint is used to send Messaging Apps messages individually (1 request per message).\nIt is ideal to send single personalized messages for use-cases like notifications or alerting for example.\n\n**For WhatsApp:**\nWhen sending a 'text' type message, we will try to match it with registered WhatsApp templates under your account\nIf matching is successful, the message will be submitted as a template to WhatsApp, if not as a normal message\n\nTo bypass the template matching and send template only, you can select type 'template'\nIn this case, you need to provide template name, language and parameters\n\n\nMore examples on how this endpoint can be used are available here: [Usage examples](/connect/docs/usage-samples-whatsapp)",
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/subaccounts/{subAccountId}/messages/batch": {
      "post": {
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon~1batch/post/responses/200/content/application~1json/schema"
                },
                "examples": {
                  "response": {
                    "value": {
                      "batchId": "cf3cbbf5-3e2d-ea11-815d-020897df5459",
                      "clientBatchId": "aaa_batch",
                      "acceptedCount": 1,
                      "rejectedCount": 1,
                      "messages": [
                        {
                          "umid": "d03cbbf5-3e2d-ea11-815d-020897df5459",
                          "user": {
                            "msisdn": "+6500000000"
                          },
                          "clientMessageId": "aaa-1",
                          "status": {
                            "state": "queued",
                            "timestamp": "2020-01-04T08:19:45.99Z"
                          }
                        },
                        {
                          "umid": "15bb8ad1-d06e-418c-8dc7-ac8a00ffeb70",
                          "user": {
                            "msisdn": "+65000001"
                          },
                          "clientMessageId": "aaa-2",
                          "status": {
                            "state": "rejected",
                            "timestamp": "2020-01-04T08:19:45.99Z",
                            "errorCode": 3038,
                            "errorMessage": "Template not found for provided name and language"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "tags": ["Send Message API"],
        "summary": "Send message batch",
        "description": "* This endpoint is used to send Messaging Apps messages by batches (1 request for multiple messages) with personalized contents/properties. \n* It is ideal to send any kind of massive personalized announcement. \n* Using this API, it is possible to send up to 1,000 messages per request.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientBatchId": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "my-batch-123",
                    "description": "Customer batch ID. This value will be returned in DR \"clientBatchId\" field"
                  },
                  "template": {
                    "type": "object",
                    "description": "Specifies general information used for all batch messages.\nWill be combined will \"messages\" field to compose final message to be sent.\nIf some property is not present in \"messge\", it will be taken from \"template\" object",
                    "properties": {
                      "type": {
                        "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema/properties/type"
                      },
                      "content": {
                        "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema/properties/content"
                      },
                      "dlrCallbackUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "Override default DR callback URL for message",
                        "example": "http://example.com"
                      },
                      "channels": {
                        "type": "array",
                        "description": "Override default Channel fallback configuration",
                        "items": {}
                      }
                    },
                    "title": "Batch message template"
                  },
                  "messages": {
                    "type": "array",
                    "description": "non-generic information to compose message. Will be combined with \"template\" properties to compose final message. At least user information should be provided.",
                    "maxItems": 10000,
                    "items": {
                      "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages/post/requestBody/content/application~1json/schema"
                    }
                  },
                  "includeMessagesInResponse": {
                    "type": "boolean",
                    "default": false,
                    "example": true,
                    "description": "If 'True', then information about every message will be returned in API response"
                  }
                },
                "required": ["messages"],
                "description": "Messaging Apps API: request model for send batch of messages",
                "title": "Batch message request"
              }
            }
          },
          "description": "Messaging Apps API: request model for send batch of messages"
        },
        "operationId": "send-message-many",
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
        }
      ]
    },
    "/api/v1/subaccounts/{subAccountId}/lon": {
      "parameters": [
        {
          "name": "subAccountId",
          "in": "path",
          "description": "You must replace *{subAccountId}* with the subaccountid that you want to use. By default this is generated once you signed up with a new account at [https://connect.8x8.com](https://connect.8x8.com).",
          "required": true,
          "schema": {
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[A-Za-z0-9\\-._&]{3,50}$",
            "type": "string"
          }
        }
      ],
      "post": {
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Single message response",
                  "properties": {
                    "status": {
                      "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/get/responses/200/content/application~1json/schema/properties/data/items/properties/status"
                    },
                    "umid": {
                      "type": "string",
                      "description": "Unique message id (guid) generated by 8x8 CPaaS platform upon message submission",
                      "format": "uuid"
                    },
                    "user": {
                      "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/post/requestBody/content/application~1json/schema/properties/user"
                    },
                    "clientMessageId": {
                      "type": "string",
                      "description": "Client managed id for the message: your own unique reference"
                    }
                  },
                  "required": ["status", "umid", "user"],
                  "title": "Single message response"
                },
                "examples": {
                  "response": {
                    "value": {
                      "umid": "82188ee0-109f-e811-8150-020897df5459",
                      "user": {
                        "msisdn": "+6512341234"
                      },
                      "clientMessageId": "1234_id",
                      "status": {
                        "state": "queued",
                        "timestamp": "2021-01-04T08:19:45.99Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "operationId": "send-lon-message",
        "summary": "Send Line Notification message",
        "tags": ["Send Message API"],
        "parameters": [
          {
            "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "user": {
                    "msisdn": "+6500000000"
                  },
                  "clientMessageId": "1234_id",
                  "content": {
                    "title": "Event reminder",
                    "company": "8x8",
                    "icon": "calendar",
                    "emphasis": {
                      "label": "Event name",
                      "content": "8x8 Conference"
                    },
                    "list": [
                      {
                        "label": "Date",
                        "content": "Tue 26/09/2022"
                      }
                    ],
                    "explanation": "We would like to remind you about your reservation for tomorrow event",
                    "greeting": "Can't wait to see you there!",
                    "actions": [
                      {
                        "title": "See direction",
                        "content": "https://www.google.com/maps"
                      }
                    ]
                  },
                  "smsFallback": {
                    "text": "Event reminder - 8x8 Conference on Tue 26/09/2022",
                    "source": "8x8 events",
                    "encoding": "AUTO"
                  }
                },
                "properties": {
                  "user": {
                    "type": "object",
                    "description": "User information\n",
                    "title": "User",
                    "properties": {
                      "msisdn": {
                        "type": "string",
                        "description": "Mobile phone number (MSISDN) to send the message to. International phone number format with '+ sign prefered. In addition we support national (local) phone numbers, please set `country` field to use it.",
                        "example": "+6500000000"
                      },
                      "country": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "Default country code (like 'sg', 'uk') for  national phone numbers format. You don't need it if `msisdn` in E.164 format (with '+' sign at the beginning)",
                        "example": "SG"
                      }
                    }
                  },
                  "clientMessageId": {
                    "type": "string",
                    "description": "Client managed id for the message : your own unique reference",
                    "maxLength": 50,
                    "example": "abc-123"
                  },
                  "content": {
                    "type": "object",
                    "description": "Content of the Line Notification message",
                    "title": "Line Notification content",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Message title",
                        "example": "Event reminder"
                      },
                      "company": {
                        "type": "string",
                        "description": "Company name",
                        "format": "uri",
                        "example": "8x8"
                      },
                      "icon": {
                        "type": "string",
                        "description": "Message icon",
                        "enum": [
                          "userPlus",
                          "chatEllipsis",
                          "phone",
                          "note",
                          "gear",
                          "bell",
                          "checkCircle",
                          "slashCircle",
                          "search",
                          "link",
                          "wallet",
                          "store",
                          "mapMarker",
                          "idCard",
                          "utensils",
                          "medicalKit",
                          "train",
                          "planeDeparture",
                          "questionCircle",
                          "infoCircle",
                          "boxCheck",
                          "calendarCheck",
                          "calendar",
                          "file",
                          "envelope",
                          "usdCircle",
                          "thbCircle",
                          "usdCircleSend",
                          "thbCircleSend",
                          "invoice",
                          "couponStar",
                          "coupon",
                          "creditCard",
                          "starCard",
                          "shoppingBag",
                          "megaphone",
                          "shieldCheck",
                          "history"
                        ]
                      },
                      "emphasis": {
                        "type": "object",
                        "description": "Emphasis component data",
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Label",
                            "example": "Event name"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content",
                            "example": "8x8 Conference"
                          }
                        }
                      },
                      "list": {
                        "type": "array",
                        "description": "Template list items",
                        "items": {
                          "type": "object",
                          "description": "List item component data",
                          "properties": {
                            "label": {
                              "type": "string",
                              "description": "Label",
                              "example": "Date"
                            },
                            "content": {
                              "type": "string",
                              "description": "Content",
                              "example": "Tue 26/09/2023"
                            }
                          }
                        }
                      },
                      "greeting": {
                        "type": "string",
                        "description": "Greeting message",
                        "example": "Can't wait to see you there!"
                      },
                      "explanation": {
                        "type": "string",
                        "description": "Explanation",
                        "example": "We would like to remind you about your reservation for tomorrow event"
                      },
                      "actions": {
                        "type": "array",
                        "description": "Template action list",
                        "items": {
                          "type": "object",
                          "description": "Action component data",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "Title",
                              "example": "See direction"
                            },
                            "url": {
                              "type": "string",
                              "description": "Url",
                              "example": "https://www.google.com/maps"
                            }
                          }
                        }
                      }
                    }
                  },
                  "dlrCallbackUrl": {
                    "type": "string",
                    "description": "Override default DR callback URL for the message",
                    "format": "uri"
                  },
                  "smsFallback": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "SMS fallback message text"
                      },
                      "source": {
                        "type": "string",
                        "description": "Source number (SenderId) - \"From\" field for SMS. Max length 16 chars.",
                        "maxLength": 16,
                        "example": "Info"
                      },
                      "encoding": {
                        "description": "Encoding for the text of the message. \"AUTO\", \"GSM7\" and \"UCS2\" \n",
                        "enum": ["AUTO", "GSM7", "UCS2"],
                        "type": "string",
                        "example": "AUTO",
                        "title": "Encoding"
                      }
                    }
                  }
                },
                "required": ["user", "content"],
                "description": "Messaging Apps API: request model for send single Line Notification message",
                "title": "Single Line Notification message request"
              }
            }
          },
          "description": "Messaging Apps API: request model for send single Line Notification message"
        },
        "description": "This endpoint is used to send Messaging Apps messages individually (1 request per message).\nIt is ideal to send single personalized messages for use-cases like notifications or alerting for example.",
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/subaccounts/{subAccountId}/lon/batch": {
      "post": {
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "batchId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "cf3cbbf5-3e2d-ea11-815d-020897df5459",
                      "description": "Batch ID, generated by 8x8"
                    },
                    "clientBatchId": {
                      "type": "string",
                      "description": "Client batch ID from request",
                      "maxLength": 100
                    },
                    "acceptedCount": {
                      "type": "integer",
                      "description": "Amount of accepted messages from batch",
                      "minimum": 0,
                      "maximum": 10000
                    },
                    "rejectedCount": {
                      "type": "integer",
                      "description": "Amount of rejected messages from batch",
                      "minimum": 0,
                      "maximum": 10000
                    },
                    "messages": {
                      "type": "array",
                      "description": "Message details. Will be include in response if request `includeMessagesInResponse` field set to `true`",
                      "items": {
                        "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/post/responses/200/content/application~1json/schema"
                      }
                    }
                  },
                  "required": ["batchId", "acceptedCount", "rejectedCount"],
                  "description": "Successful batch response",
                  "title": "Batch message response"
                },
                "examples": {
                  "response": {
                    "value": {
                      "batchId": "cf3cbbf5-3e2d-ea11-815d-020897df5459",
                      "clientBatchId": "aaa_batch",
                      "acceptedCount": 1,
                      "rejectedCount": 1,
                      "messages": [
                        {
                          "umid": "d03cbbf5-3e2d-ea11-815d-020897df5459",
                          "user": {
                            "msisdn": "+6500000000"
                          },
                          "clientMessageId": "aaa-1",
                          "status": {
                            "state": "queued",
                            "timestamp": "2020-01-04T08:19:45.99Z"
                          }
                        },
                        {
                          "umid": "15bb8ad1-d06e-418c-8dc7-ac8a00ffeb70",
                          "user": {
                            "msisdn": "+65000001"
                          },
                          "clientMessageId": "aaa-2",
                          "status": {
                            "state": "rejected",
                            "timestamp": "2020-01-04T08:19:45.99Z",
                            "errorCode": 3038,
                            "errorMessage": "Template not found for provided name and language"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "tags": ["Send Message API"],
        "summary": "Send Line Notification message batch",
        "description": "* This endpoint is used to send Messaging Apps messages by batches (1 request for multiple messages) with personalized contents/properties. \n* It is ideal to send any kind of massive personalized announcement. \n* Using this API, it is possible to send up to 1,000 messages per request.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientBatchId": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "my-batch-123",
                    "description": "Customer batch ID. This value will be returned in DR \"clientBatchId\" field"
                  },
                  "messages": {
                    "type": "array",
                    "description": "non-generic information to compose message. Will be combined with \"template\" properties to compose final message. At least user information should be provided.",
                    "maxItems": 10000,
                    "items": {
                      "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/post/requestBody/content/application~1json/schema"
                    }
                  },
                  "includeMessagesInResponse": {
                    "type": "boolean",
                    "default": false,
                    "example": true,
                    "description": "If 'True', then information about every message will be returned in API response"
                  }
                },
                "required": ["messages"],
                "description": "Messaging Apps API: request model for send batch of messages",
                "title": "Batch message request"
              }
            }
          },
          "description": "Messaging Apps API: request model for send batch of Line Notification messages"
        },
        "operationId": "send-lon-messages",
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
        }
      ]
    },
    "/api/v1/subaccounts/{subAccountId}/messages/{umid}/read": {
      "post": {
        "responses": {
          "200": {
            "description": "Request is successful. "
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "summary": "Mark message as read",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/post/requestBody/content/application~1json/schema/properties/user"
                  },
                  "umid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique messages ID",
                    "example": "cf3cbbf5-3e2d-ea11-815d-020897df5459"
                  },
                  "channel": {
                    "type": "string",
                    "description": "Messaging Apps Channel enumeration",
                    "enum": [
                      "SMS",
                      "WhatsApp",
                      "Facebook",
                      "GoogleRCS",
                      "Viber",
                      "Line",
                      "WeChat",
                      "Zalo",
                      "Instagram"
                    ],
                    "example": "WhatsApp",
                    "title": "Channel type"
                  }
                },
                "title": "Read message request",
                "description": "Read message request"
              }
            }
          },
          "description": "- Either `user` or `umid` is required in the request. \n- Hence the endpoint can be \n\n`{\n  \"user\": {\n      \"msisdn\" : \"+6500000000\"\n  }\n}`\n\nor \n\n`{\n  \"umid\": \"F5C6DR30-8905-EA81-8SDC-4634897DFG45H\"\n}`\n\t\n\n- The message channel is optional and can be used when a subaccount is configured with multiple channels and a read status is required to be submitted to a specific channel. ",
          "x-examples": {
            "application/json": {
              "user": {
                "msisdn": "+6500000000"
              },
              "channel": "whatsapp"
            }
          }
        },
        "tags": ["Management API"],
        "description": "This endpoint is used to indicate to end users that a message has been read by the respective brand or official account. \n\nCurrent channel support: \n- WhatsApp Business account (two blue ticks on customers message). \n",
        "operationId": "mark-message-read",
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
        },
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/parameters/1"
        }
      ]
    },
    "/api/v1/accounts/{accountId}/channels/{channelId}/templates": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Register template response",
                  "properties": {
                    "templates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Registered template",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ec36a867-3dd4-e911-814a-02d85f55fce8",
                            "description": "Channel ID"
                          },
                          "channelName": {
                            "type": "string",
                            "maxLength": 36,
                            "description": "Channel User-friendly name",
                            "example": "My WhatsApp Instance"
                          },
                          "templateName": {
                            "type": "string",
                            "maxLength": 200,
                            "example": "test1",
                            "description": "Template name"
                          },
                          "language": {
                            "type": "string",
                            "maxLength": 5,
                            "example": "en_US",
                            "description": "Template languate code"
                          },
                          "languageName": {
                            "type": "string",
                            "example": "English (US)",
                            "description": "User-friendly language name"
                          },
                          "components": {
                            "type": "array",
                            "description": "Template components",
                            "items": {
                              "type": "object",
                              "title": "Registered template component",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "default": "BODY",
                                  "description": "Component type",
                                  "enum": [
                                    "HEADER",
                                    "BODY",
                                    "FOOTER",
                                    "BUTTONS"
                                  ]
                                },
                                "format": {
                                  "type": "string",
                                  "enum": [
                                    "Text",
                                    "Image",
                                    "Video",
                                    "Document",
                                    "Location"
                                  ],
                                  "example": "Image",
                                  "description": "Component type.\nRequired for HEADER component type."
                                },
                                "text": {
                                  "type": "string",
                                  "example": "You can pickup your delivery at {{1}}",
                                  "description": "Component text. Required for BODY and FOOTER types"
                                },
                                "buttons": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1channels~1%7BchannelId%7D~1templates/post/requestBody/content/application~1json/schema/properties/components/items/properties/buttons/items"
                                  }
                                },
                                "example": {
                                  "title": "registered-template-component-examples",
                                  "x-stoplight": {
                                    "id": "x007v2ojjyybi"
                                  },
                                  "type": "object",
                                  "description": "Example data provided for the template",
                                  "properties": {
                                    "headerText": {
                                      "type": "array",
                                      "description": "Header text examples",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "bodyText": {
                                      "type": "array",
                                      "description": "Body text examples",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "headerHandle": {
                                      "type": "array",
                                      "description": "Header images, docs or videos examples",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "required": ["type"]
                            }
                          },
                          "category": {
                            "type": "string",
                            "example": "UTILITY",
                            "description": "template category enumeration"
                          },
                          "categoryName": {
                            "type": "string",
                            "example": "Utility",
                            "description": "User-friendly category name"
                          },
                          "status": {
                            "type": "string",
                            "example": "APPROVED",
                            "description": "Template status enumeration"
                          },
                          "statusName": {
                            "type": "string",
                            "example": "Approved",
                            "description": "User-friendly status name"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-08-26T04:50:47.38Z",
                            "description": "Template creation timestamp"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-09-26T04:50:47.38Z",
                            "description": "Template last update timestamp"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "templates": [
                        {
                          "channelId": "ec36a867-3dd4-e911-814a-02d85f55fce8",
                          "channelName": "My WhatsApp instance",
                          "templateName": "ticket_created",
                          "language": "en",
                          "languageName": "English",
                          "components": [
                            {
                              "type": "BODY",
                              "text": "Hi, your booking have been confirmed. Here is your new booking information {{1}}"
                            }
                          ],
                          "category": "UTILITY",
                          "categoryName": "Utility",
                          "status": "APPROVED",
                          "statusName": "Approved",
                          "createdAt": "2019-11-19T07:51:38.09Z",
                          "updatedAt": "2019-11-28T02:16:42.82Z"
                        },
                        {
                          "channelId": "ec36a867-3dd4-e911-814a-02d85f55fce8",
                          "channelName": "My WhatsApp instance",
                          "templateName": "ticket_closed",
                          "language": "en",
                          "languageName": "English",
                          "components": [
                            {
                              "type": "HEADER",
                              "format": "Image"
                            },
                            {
                              "type": "BODY",
                              "text": "Your ticket {{1}} was closed."
                            },
                            {
                              "type": "FOOTER",
                              "text": "Support Team"
                            }
                          ],
                          "category": "UTILITY",
                          "categoryName": "Utility",
                          "status": "APPROVED",
                          "statusName": "Approved",
                          "createdAt": "2019-11-14T07:17:57.16Z",
                          "updatedAt": "2019-11-28T02:16:42.82Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "summary": "Get WhatsApp templates",
        "operationId": "get-whatsapp-templates",
        "tags": ["Management API"],
        "description": "This endpoint is used to get your registered WhatsApp message template and their approval status. \n\nWhatsApp Message Templates are message formats for common reusable messages a business may want to send. \nBusinesses must use Message Templates for sending notifications to customers.\nAny message sent outside the 24h customer service window, needs to be a template message, to be delivered. \nAdvertising, marketing, or promotional messages are not permitted.",
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/parameters/0"
        },
        {
          "in": "path",
          "name": "channelId",
          "required": true,
          "description": "Channel identifier",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "summary": "Add WhatsApp template",
        "operationId": "add-whatsapp-template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string",
                    "example": "en_US",
                    "description": "Template language code"
                  },
                  "name": {
                    "type": "string",
                    "example": "ticket_update_en_US",
                    "description": "Template name"
                  },
                  "category": {
                    "type": "string",
                    "description": "template category",
                    "example": "UTILITY"
                  },
                  "components": {
                    "type": "array",
                    "description": "Registered template components",
                    "items": {
                      "type": "object",
                      "title": "Registered template component",
                      "properties": {
                        "type": {
                          "type": "string",
                          "default": "BODY",
                          "description": "Component type",
                          "enum": [
                            "HEADER",
                            "BODY",
                            "FOOTER",
                            "BUTTONS",
                            "CAROUSEL"
                          ]
                        },
                        "format": {
                          "type": "string",
                          "enum": [
                            "Text",
                            "Image",
                            "Video",
                            "Document",
                            "Location"
                          ],
                          "example": "Image",
                          "description": "Component type.\nRequired for HEADER component type."
                        },
                        "text": {
                          "type": "string",
                          "example": "You can pickup your delivery at {{1}}",
                          "description": "Component text. Required for BODY and FOOTER types"
                        },
                        "buttons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The parameters related to the button component",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PHONE_NUMBER",
                                  "URL",
                                  "QUICK_REPLY",
                                  "OTP",
                                  "COPY_CODE"
                                ],
                                "description": "Button type"
                              },
                              "text": {
                                "type": "string",
                                "description": "The text to be displayed on the button.",
                                "minLength": 1,
                                "maxLength": 20
                              },
                              "phoneNumber": {
                                "type": "string",
                                "description": "Required for type \"PHONE_NUMBER\".\n\nThe phone number that will be called on clicking the button."
                              },
                              "country": {
                                "type": "string",
                                "description": "Optional country code of phone number (ISO 3166-1 alpha-2). Required if the phone number in the national format.",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "US"
                              },
                              "url": {
                                "type": "string",
                                "description": "Required for type \"URL\".\n\nThe URL that will be visited on clicking the button\nVariables can be used to create dynamic links.",
                                "format": "uri",
                                "example": "https://website.com/{{1}}"
                              },
                              "example": {
                                "type": "array",
                                "description": "To help WhatsApp moderators during the review and approval process, you can include example data. This can help WhatsApp understand what kind of message you plan to send and showcase the customer experience.\n\nFor example, you could include an image that could represent a customer's profile picture to personalize the experience.\n\nMake sure these are examples and do not include any confidential or personal information.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": ["type", "text"]
                          }
                        },
                        "examples": {
                          "type": "array",
                          "description": "To help WhatsApp moderators during the review and approval process, you can include example data. This can help WhatsApp understand what kind of message you plan to send and showcase the customer experience.\n\nFor example, you could include an image that could represent a customer's profile picture to personalize the experience.\n\nMake sure these are examples and do not include any confidential or personal information.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "add_security_recommendation": {
                          "type": "boolean",
                          "description": "Only for BODY component with AUTHENTICATION template category"
                        },
                        "code_expiration_minutes": {
                          "type": "integer",
                          "default": 5,
                          "description": "Only for FOOTER component with AUTHENTICATION template category"
                        },
                        "cards": {
                          "type": "array",
                          "description": "Required only for CAROUSEL type. You can create up to 10 cards.",
                          "items": {
                            "type": "object",
                            "title": "Registered template card component.",
                            "description": "Each card should have a HEADER, BODY, BUTTONS components.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "default": "BODY",
                                "description": "Component type",
                                "enum": ["HEADER", "BODY", "BUTTONS"]
                              },
                              "format": {
                                "type": "string",
                                "enum": ["Image", "Video"],
                                "example": "Image",
                                "description": "Component type.\nRequired for HEADER component type."
                              },
                              "text": {
                                "type": "string",
                                "example": "You can pickup your delivery at {{1}}",
                                "description": "Component text. Required for BODY and FOOTER types"
                              },
                              "buttons": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1channels~1%7BchannelId%7D~1templates/post/requestBody/content/application~1json/schema/properties/components/items/properties/buttons/items"
                                }
                              },
                              "examples": {
                                "type": "array",
                                "description": "To help WhatsApp moderators during the review and approval process, you can include example data. This can help WhatsApp understand what kind of message you plan to send and showcase the customer experience.\n\nFor example, you could include an image that could represent a customer's profile picture to personalize the experience.\n\nMake sure these are examples and do not include any confidential or personal information.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": ["type"]
                          }
                        }
                      },
                      "required": ["type"]
                    }
                  },
                  "allow_category_change": {
                    "type": "boolean",
                    "example": false,
                    "description": "set to true to allow whatsapp to automatically assign a category. If omitted, the template may be rejected due to mis-categorization.",
                    "default": true
                  }
                },
                "required": ["language", "name", "category", "components"],
                "title": "Register template request",
                "description": "Register template request"
              },
              "examples": {
                "whatsAppMediaCarouselTemplate": {
                  "summary": "Add WhatsApp Media Carousel Template with 3 cards",
                  "value": {
                    "language": "en_US",
                    "name": "<Insert Template Name>",
                    "allow_category_change": true,
                    "category": "MARKETING",
                    "components": [
                      {
                        "type": "body",
                        "text": "Rare succulents for sale! {{1}}, add these unique plants to your collection. Each of these rare succulents are {{2}} if you checkout using code {{3}}. Shop now and add some unique and beautiful plants to your collection!",
                        "examples": ["Pablo", "30%", "30OFF"]
                      },
                      {
                        "type": "carousel",
                        "cards": [
                          {
                            "components": [
                              {
                                "type": "header",
                                "format": "image",
                                "examples": [
                                  "https://www.example.com/image.jpg"
                                ]
                              },
                              {
                                "type": "body",
                                "text": "Add a touch of elegance to your collection with the beautiful Aloe Blue Elf succulent. Its deep blue-green leaves have a hint of pink around the edges."
                              },
                              {
                                "type": "buttons",
                                "buttons": [
                                  {
                                    "type": "quick_reply",
                                    "text": "Send me more like this!"
                                  },
                                  {
                                    "type": "url",
                                    "text": "Shop",
                                    "url": "https://www.example.com/rare-succulents/{{1}}",
                                    "examples": ["BLUE_ELF"]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "components": [
                              {
                                "type": "header",
                                "format": "image",
                                "examples": [
                                  "https://www.example.com/image.jpg"
                                ]
                              },
                              {
                                "type": "body",
                                "text": "The Crassula Buddha Temple is sure to be a conversation starter with its tiny temple shaped leaves, intricate details, and lacy texture."
                              },
                              {
                                "type": "buttons",
                                "buttons": [
                                  {
                                    "type": "quick_reply",
                                    "text": "Send me more like this!"
                                  },
                                  {
                                    "type": "url",
                                    "text": "Shop",
                                    "url": "https://www.example.com/rare-succulents{{1}}",
                                    "examples": ["BUDDHA"]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "components": [
                              {
                                "type": "header",
                                "format": "image",
                                "examples": [
                                  "https://www.example.com/image.jpg"
                                ]
                              },
                              {
                                "type": "body",
                                "text": "The Echeveria Black Prince is a stunning succulent, with near-black leaves, adorned with a hint of green around the edges, giving it its striking appearance."
                              },
                              {
                                "type": "buttons",
                                "buttons": [
                                  {
                                    "type": "quick_reply",
                                    "text": "Send me more like this!"
                                  },
                                  {
                                    "type": "url",
                                    "text": "Shop",
                                    "url": "https://www.example.com/rare-succulents{{1}}",
                                    "examples": ["BLACK_PRINCE"]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-examples": {
            "application/json": {
              "language": "en_US",
              "name": "ticket_update_image_en_US",
              "category": "UTILITY",
              "components": [
                {
                  "type": "HEADER",
                  "format": "IMAGE"
                },
                {
                  "type": "BODY",
                  "text": "Your ticket {{1}} was closed."
                },
                {
                  "type": "FOOTER",
                  "text": "Support Team"
                }
              ]
            }
          }
        },
        "tags": ["Management API"],
        "description": "This endpoint is used to register new WhatsApp message template.\n\nPlease note that special html entities should be unescaped.\n\nWhatsApp Message Templates are message formats for common reusable messages a business may want to send. \nBusinesses must use Message Templates for sending notifications to customers.\nAny message sent outside the 24h customer service window, needs to be a template message, to be delivered. \nAdvertising, marketing, or promotional messages are not permitted.",
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/accounts/{accountId}/channels/{channelId}/templates/{templateName}": {
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "description": "This endpoint is used to remove an existing WhatsApp message template.\n\nWhatsApp Message Templates are message formats for common reusable messages a business may want to send. \nBusinesses must use Message Templates for sending notifications to customers.\nAny message sent outside the 24h customer service window, needs to be a template message, to be delivered. \nAdvertising, marketing, or promotional messages are not permitted.",
        "summary": "Remove WhatsApp template",
        "security": [
          {
            "apiKey": []
          }
        ],
        "operationId": "remove-wa-template",
        "tags": ["Management API"]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "channelId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "templateName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/v1/subaccounts/{subAccountId}/messages/exports": {
      "post": {
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "Identifier of the job started. Use this value to query job result."
                    }
                  },
                  "required": ["jobId"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "jobId": "F1T6z9C5tW2QV1pdMzO9xpMXrYEmfnvqORGqpePJGpgzjTJ80TSaZEE7aX2wrgix"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Start log export job",
        "operationId": "start-log-export-job-1",
        "tags": ["Reporting API"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "LogExportRequest",
                "properties": {
                  "from": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The values can be entered either as:\n\n- UTC date (`yyyy-MM-dd` format).\n- UTC timezone datetime, then the expected format is `yyyy-MM-ddTHH:mm:ssZ`\n- or as local timezone datetime, then the expected format is `yyyy-MM-ddTHH:mm:sszzz`\n\nThe API will automatically determine whether the datetime is UTC or local based on the format of the value.  \nThe default value is UTC today - 7 days.  \nThe value should less than value of `to` parameter.  \n\nExample values:\n* `2020-07-01` Date without time\n* `2020-07-01T13:00:00` (UTC Time)\n* `2020-07-01T13:00:00+07:00` Datetime with timezone"
                  },
                  "to": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The values can be entered either as:\n\n- UTC date (`yyyy-MM-dd` format).\n- UTC timezone datetime, then the expected format is `yyyy-MM-ddTHH:mm:ssZ`\n- or as local timezone datetime, then the expected format is `yyyy-MM-ddTHH:mm:sszzz`\n\nThe API will automatically determine whether the datetime is UTC or local based on the format of the value.  \nThe default value is today in UTC timezone.  \nThe value should less than value of `to` parameter.  \n\nExample values:\n* `2020-07-01` Date without time\n* `2020-07-01T13:00:00` (UTC Time)\n* `2020-07-01T13:00:00+07:00` Datetime with timezone"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Valid phone number in E.164 format.",
                    "example": "6511111111"
                  },
                  "countries": {
                    "type": "array",
                    "description": "The list of two-letter ISO 3166 country codes that the message has been sent to",
                    "items": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 2,
                      "example": "US"
                    },
                    "example": ["US", "SG"]
                  },
                  "limit": {
                    "type": "integer",
                    "description": "You also need to define if you would like to limit the number of records to fetch using the parameter ***limit*** and an integer value\n\nIf you do not want to put a limit on the number of records to retrieve, setting ***limit*** to 0 allows to set is as unlimited.\n\n- *NB: a longer time-span (eg: several months) and no limit on the records number will increase the time required to generate the logs file.*",
                    "default": 0
                  }
                }
              }
            }
          },
          "x-examples": {
            "application/json": {
              "from": "2020-07-01",
              "to": "2020-08-01T13:15:00+08:00",
              "limit": 500000
            }
          }
        },
        "description": "* Sending a **POST** request on this endpoint allows to **request an Messaging Apps logs file**.\n\n## URL\n\nThe 8x8 Messaging Apps `subAccountId` needs to be provided in the URL as shown below:\n`https://chatapps.8x8.com/api/v1/subaccounts/{subAccountID}/messages/exports`\n\n*You must replace `{subAccountId}` in the URL above with the subaccountid that you want to use.*"
      },
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
        }
      ]
    },
    "/api/v1/subaccounts/{subAccountId}/messages/exports/{jobId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled",
                        "empty",
                        "error"
                      ],
                      "description": "Job status"
                    },
                    "data": {
                      "type": "array",
                      "description": "The value presented in the response only when the status is \"succeeded\".\n\nArray of links to download the report. Links are valid until the time defined by `expires` value.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expires": {
                      "type": "string",
                      "description": "The value presented in the response only when the status is \"succeeded\".\n\nContains the UTC datetime after which the report won't be accessible anymore.",
                      "example": "2020-07-01T06:58:41.74Z"
                    }
                  },
                  "title": "LogExportJobStatus"
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "succeeded",
                      "data": [
                        "https://chatapps.8x8.com/api/v1/subaccounts/your_subAccountId/messages/download/long-unique-token-here"
                      ],
                      "expires": "2020-10-25T06:58:41.74Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "examples": {
                  "response": {
                    "value": {
                      "code": 4018,
                      "message": "Invalid jobId",
                      "errorId": "aa400d4b-fffe-ea11-8277-00155d4ff7ed",
                      "timestamp": "2020-09-25T07:18:22.78Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get log export job result",
        "operationId": "get-log-export-job-result-1",
        "tags": ["Reporting API"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "* Sending a **GET** request on this endpoint allows to **check the status of an Messaging Apps Logs export job** and to **get a download link** if its generation has succeeded.\n\n  \n\n## URL\n\nTo define which SMS logs export you want to retrieve, you need to enter the Job ID generated by XXXXX in the path as well as the 8x8 SMS subaccountid you used in the previous request.\n`https://chatapps.8x8.com/api/v1/subaccounts/{subAccountID}/messages/exports/{jobId}`\n\n*You must replace `{jobID}`  and `{subAccountId}` in the URL above with the jobID and subaccountid from the start SMS logs export job request*\n> To safeguard your privacy, sensitive data such as message content and phone numbers are masked by default. Access to this information can be requested by contacting our support team."
      },
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "Export job identifier",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "examples": {
                  "response": {
                    "value": {
                      "code": 4018,
                      "message": "Invalid jobId",
                      "errorId": "aa400d4b-fffe-ea11-8277-00155d4ff7ed",
                      "timestamp": "2020-09-25T07:18:22.78Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Cancel the log export job ",
        "operationId": "cancel-log-export-job-1",
        "tags": ["Reporting API"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "* Sending a **DELETE** request on this endpoint allows to **cancel a Messaging Apps Logs export job**.\n\n  \n\n## URL\n\nTo define which SMS logs export you want to retrieve, you need to enter the Job ID generated by XXXXX in the path as well as the 8x8 SMS subaccountid you used in the previous request.\n`https://chatapps.8x8.com/api/v1/subaccounts/{subAccountID}/messages/exports/{jobId}`\n\n*You must replace `{jobID}`  and `{subAccountId}` in the URL above with the jobID and subaccountid from the start SMS logs export job request*"
      }
    },
    "/api/v1/subaccounts/{subAccountId}/messages/{umid}": {
      "get": {
        "responses": {
          "200": {
            "description": "The success response returned with the message details of the message specified by the umid. Since channel fallback is supported, a single message umid may have multiple message details records depending on the number of channels attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "umid": {
                            "type": "string",
                            "description": "Unique message ID automatically generated by 8x8.",
                            "example": "dec02e44-c76f-4a0a-b69f-6ac2a4386eb9"
                          },
                          "subAccountId": {
                            "type": "string",
                            "description": "Sub account id with which the message is associated with."
                          },
                          "channel": {
                            "type": "string",
                            "description": "Name of the channel used to send the message. Possible values are *SMS*, *WhatsApp*, *RCS*, *Viber*, *Line*, *Facebook*, *WeChat*, *Zalo* or *Kakao*.",
                            "example": "WhatsApp"
                          },
                          "channelId": {
                            "type": "string",
                            "description": "Unique channel identifier. This property uniquely identifies the channel used to send the message when multiple channels of the same type are associated with one sub account.",
                            "example": "8e4d1303-5754-e911-8154-020897df5459"
                          },
                          "direction": {
                            "type": "string",
                            "description": "Direction of the message. Possible values are\n- **outbound:** Mobile terminated.\n- **inbound:** Mobile originated.",
                            "example": "outbound"
                          },
                          "country": {
                            "type": "string",
                            "description": "Two-letter ISO 3166 country code associated with the message.",
                            "example": "SG"
                          },
                          "status": {
                            "title": "MessageStatus",
                            "type": "object",
                            "description": "Delivery status of the message. Status contains the following information.",
                            "properties": {
                              "state": {
                                "type": "string",
                                "description": "General status of the message. Possible values are\n- **unknown:** Status is not known. This is an exceptional/intermediate status. \n- **queued:** The request is accepted and queued for processing\n- **failed:** The request has been rejected by the api and will not be processed.\n- **sent:** The message has been sent to the operator and we have not received an acknowledgment yet.\n- **delivered:** Message has been delivered to destination and we have received confirmation from the operator.\n- **undelivered:** We have received a delivery receipt from the operator that the message was not delivered.\n- **read:** Message was delivered and read.\n- **ok:** Operation was successful\n- **error:** An error occurred during operation",
                                "example": "delivered"
                              },
                              "detail": {
                                "type": "string",
                                "description": "- **delivered_to_operator**: The message has been delivered to the operator. Associated with **delivered** state\n- **delivered_to_recipient**: The message has been delivered to the recipient. Associated with **delivered** state.\n- **rejected_by_operator**: The message has been rejected by the operator. Associated with **undelivered** status.\n- **undelivered_to_recipient**: The message has been delivered but rejected by the target device. Associated with **undelivered** state.",
                                "example": "delivered_to_carrier"
                              },
                              "errorCode": {
                                "type": "integer",
                                "description": "Error code for the operation"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Description of the error.",
                                "example": "Invalid message length"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "Date and time when the status was observed expressed in  ISO 8601 format.",
                                "example": "2020-06-17T04:17:21.06Z",
                                "format": "date-time"
                              }
                            }
                          },
                          "user": {
                            "type": "object",
                            "description": "Information about the user the message is associated with.",
                            "properties": {
                              "msisdn": {
                                "type": "string",
                                "description": "Phone number (obfuscated to protect sensitive information) expressed in E.164 international format.",
                                "example": "+63922110xxxx"
                              },
                              "channelUserId": {
                                "type": "string",
                                "description": "Channel user identifier (obfuscated to protect sensitive data)."
                              }
                            }
                          },
                          "contentType": {
                            "type": "string",
                            "example": "Text",
                            "description": "Content type of the message. Possible values are *Text*, *Audio*, *Video*, *Image*, *Location*, *File*, *Carousel*, *List*, *Buttons* or *Template*."
                          },
                          "content": {
                            "type": "string",
                            "example": "**MASKED**",
                            "description": "Message content (obfuscated to protect sensitive information)."
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date and time the message was submitted to the api expressed in ISO 8601 format.  ",
                            "example": "2020-06-17T04:17:21.06Z"
                          },
                          "clientMessageId": {
                            "type": "string",
                            "description": "Client message identifier."
                          },
                          "clientBatchId": {
                            "type": "string",
                            "description": "Client batch identifier."
                          },
                          "batchId": {
                            "type": "string",
                            "description": "Universaly unique batch identifier (UUID).",
                            "example": "c9c01382-38bf-4e27-8962-ae0684ab56c3"
                          },
                          "step": {
                            "type": "integer",
                            "example": 1,
                            "description": "Indicates the attempt on which the channel was used. For instance, a message delivery may be failed via *Viber* and a fallback channel like *WhatsApp* may be attempted next. In this case, step 1 will contain message details for *Viber* and step 2 will contain the message details for *WhatsApp*."
                          }
                        },
                        "required": [
                          "umid",
                          "subAccountId",
                          "channel",
                          "channelId",
                          "direction",
                          "status",
                          "contentType",
                          "createdAt",
                          "step"
                        ]
                      }
                    }
                  },
                  "required": ["data"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "umid": "dec02e44-c76f-4a0a-b69f-6ac2a4386eb9",
                          "subAccountId": "sub_account_id",
                          "channel": "WhatsApp",
                          "channelId": "904d1303-5754-e911-8154-020897df5459",
                          "direction": "Outbound",
                          "status": {
                            "state": "read",
                            "timestamp": "2020-06-17T04:25:21.06Z"
                          },
                          "contentType": "Text",
                          "createdAt": "2020-06-17T04:15:21.06Z",
                          "step": 2,
                          "country": "SG",
                          "user": {
                            "msisdn": "+63922110xxxx"
                          },
                          "content": "**MASKED**",
                          "clientMessageId": "client message id",
                          "clientBatchId": "client batch id",
                          "batchId": "c9c01382-38bf-4e27-8962-ae0684ab56c3"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/404"
          },
          "429": {
            "description": "Rate limiting quota exceeded error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 429,
                  "message": "Quota exceeded. Please try again in 1 second(s).",
                  "errorId": "c8a41b47-57bf-ea11-8273-00155d466a31",
                  "timestamp": "2020-07-06T07:07:00.30Z"
                }
              }
            }
          }
        },
        "tags": ["Reporting API"],
        "summary": "Retrieve message details",
        "description": "This resource can be used to query message details like delivery status using the UMID of the message. You need to specify the sub account id and the umid of the message in place of *{subAccountId}* and *{umid}* respectively. *umid* is the unique identifier (in the form of a uuid) you received when you submitted the message to the api.\n\n### API Rate Limiting\nTo protect the platform from being overloaded and maintain a high quality of service to all customers, we enforce API rate limits for this API endpoint.\n\nThe limit is set to 1 request/second per subaccount.\n> To safeguard your privacy, sensitive data such as message content and phone numbers are masked by default. Access to this information can be requested by contacting our support team.",
        "operationId": "get-chatapps-message-details",
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "delete": {
        "tags": ["Send Message API"],
        "summary": "Cancel the scheduled message",
        "operationId": "cancel-scheduled-message-1",
        "description": "This resource can be used to cancel a scheduled message that has not been sent yet using the *unique message identifier* (`UMID`) of the message.\n\n### URL\nYou need to specify the *sub-account id* and the *umid* of the message in place of `{subAccountId}` and `{umid}` respectively. \n`umid` is the unique identifier you received when you submitted the message to the API.\n",
        "parameters": [
          {
            "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
          },
          {
            "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/parameters/1"
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "cancelledCount": 1
                    }
                  },
                  "properties": {
                    "cancelledCount": {
                      "type": "integer",
                      "description": "Number of cancelled messages"
                    }
                  },
                  "required": ["cancelledCount"]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "cancelledCount": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "This error response is returned if the request is invalid (e.g. umid is not a valid uuid).",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "required": ["code", "errorId", "timestamp"],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error description"
                    },
                    "errorId": {
                      "type": "string",
                      "description": "Unique id of error. You can use it as reference when sending enquiries to 8x8 support",
                      "format": "uuid"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "Data and time of the error occurence",
                      "format": "date-time"
                    }
                  },
                  "description": "Response in case of error",
                  "example": {
                    "code": 1001,
                    "message": "Provided subAccountId doesn't belongs to your account",
                    "errorId": "91b106f0-c0da-4aba-a43a-7af9c5893a80",
                    "timestamp": "2017-04-19T02:31:19.4297387+00:00"
                  }
                },
                "example": {
                  "code": 1000,
                  "message": "Invalid umid.",
                  "errorId": "fbb239f1-2eb1-ea11-afa9-00155db6eaf4",
                  "timestamp": "2020-06-18T06:42:57.20Z"
                }
              }
            }
          },
          "401": {
            "description": "Request was not authenticated response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 1200,
                  "message": "Request was not authenticated properly",
                  "errorId": "db9dced4-3534-4d86-9d18-6b448af0d621",
                  "timestamp": "2018-08-02T09:42:38.8988997+00:00"
                }
              }
            }
          },
          "404": {
            "description": "This error response is returned if there is a message by the specified sub account and umid does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 1300,
                  "message": "Message not found.",
                  "errorId": "1949a467-2db1-ea11-afa9-00155db6eaf4",
                  "timestamp": "2020-06-18T06:31:58.11Z"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
        },
        {
          "name": "umid",
          "in": "path",
          "description": "Unique message Id, generated by 8x8 API.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/v1/accounts/{accountId}/webhooks": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "You must replace *{accountId}* with the accountid that you want to use.",
          "required": true,
          "schema": {
            "maxLength": 36,
            "minLength": 32,
            "pattern": "^[0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}$",
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Webhook Configuration API"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Webhook",
                    "description": "The webhook model",
                    "properties": {
                      "subAccountId": {
                        "type": "string",
                        "description": "- Sets the subaccount scope of the webhook.\n- Use `*` to receive events across all subAccounts.\n- Use the `subAccountId` to receive events for a specific subaccount.",
                        "example": "Onion_Marketing"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "example": "http://example.com",
                        "description": "The `url` to use for the webhook (8x8 platform will send events to this URL)."
                      },
                      "enabled": {
                        "type": "boolean",
                        "example": false,
                        "description": "Use this flag to enable or disable a Webhook.",
                        "default": true
                      }
                    },
                    "required": ["subAccountId", "url"]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "type": "CADR",
                        "subAccountId": "Onion_Marketing",
                        "url": "http://example.com/dr/marketing",
                        "enabled": true
                      },
                      {
                        "type": "MSG",
                        "subAccountId": "*",
                        "url": "http://example.com/dr/general",
                        "enabled": true
                      },
                      {
                        "type": "CABM",
                        "subAccountId": "*",
                        "url": "http://example.com/mo/general",
                        "enabled": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 1002,
                  "message": "Invalid MSISDN format (not E.164 international number)",
                  "errorId": "b4478860-b76c-e811-814e-022a35cc1c71",
                  "timestamp": "2018-08-04T09:25:40.9235752+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Request was not authenticated response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 1200,
                  "message": "Request was not authenticated properly",
                  "errorId": "db9dced4-3534-4d86-9d18-6b448af0d621",
                  "timestamp": "2018-08-02T09:42:38.8988997+00:00"
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "summary": "Get all Webhooks for Account",
        "operationId": "Get-Webhooks-1",
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Sending a GET request on this endpoint allows to **retrieve a list of all the webhooks or a specific webhook configured for an account**."
      },
      "post": {
        "tags": ["Webhook Configuration API"],
        "responses": {
          "200": {
            "description": "The webhook was created or updated successfully"
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "summary": "Create or Replace webhooks",
        "operationId": "Add-Webhooks-1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Webhook",
                  "description": "The webhook model",
                  "properties": {
                    "subAccountId": {
                      "type": "string",
                      "description": "- Sets the subaccount scope of the webhook.\n- Use `*` to receive events across all subAccounts.\n- Use the `subAccountId` to receive events for a specific subaccount.",
                      "example": "Onion_Marketing"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "http://example.com",
                      "description": "The `url` to use for the webhook (8x8 platform will send events to this URL)."
                    },
                    "httpAuthorization": {
                      "type": "string",
                      "description": "- If your webhook requires an authorization, use this parameter to specify it.\n- If specified, the HTTP Authorization header will be passed to your webhook as is.\n- Examples:\n\t- **Basic Authorization** example\n\t\t- for `user:password`, you must encode the string `user:password` in base64 (encoded: dXNlcjpwYXNzd29yZA==)\n  \t\t- the parameter value should then be set to `Basic dXNlcjpwYXNzd29yZA==`\n\t- **OAuth2 Authorization** \n\t\t- We support OAuth2 Client Credentials flow. Please contact support to configure OAuth2 parameters.",
                      "example": "Bearer 9QQhlsEb8VY"
                    },
                    "enabled": {
                      "type": "boolean",
                      "example": false,
                      "description": "Use this flag to enable or disable a Webhook.",
                      "default": true
                    },
                    "type": {
                      "type": "string",
                      "enum": ["CADR", "MSG", "CABM"],
                      "description": "This parameter is not mandatory.\n- Sets the type of webhook to be added/updated.\n- Possible values are:\n  * `CADR` for delivery receipts\n  * `MSG` for inbound messages\n  * `CABM` for Messaging Apps Business Management Updates\n- When not provided, webhooks will be added/updated for only CADR and MSG."
                    }
                  },
                  "required": ["subAccountId", "url"]
                }
              }
            }
          },
          "x-examples": {
            "application/json": [
              {
                "subAccountId": "Onion_Marketing",
                "url": "http://example.com/DR/marketing",
                "httpAuthorization": "Basic dXNlcjpwYXNzd29yZA==",
                "enabled": false
              },
              {
                "subAccountId": "*",
                "url": "http://example.com/mo/general",
                "enabled": true
              }
            ]
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Sending a POST request on this endpoint allows to **add a new webhook for an account or modify the configuration of an existing one** .  \n\nWebhooks can be given an account-wide and/or a type-wide scope using the \\* character  \n\nFor example: if a webhook is created with subAccount=\\* , this webhook will receive events across all the subaccounts of an account."
      },
      "delete": {
        "tags": ["Webhook Configuration API"],
        "responses": {
          "200": {
            "description": "The webhook was deleted successfully"
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "summary": "Delete webhooks",
        "operationId": "Delete-Webhooks-1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Webhook Delete",
                  "description": "The webhook-delete model",
                  "properties": {
                    "subAccountId": {
                      "type": "string",
                      "description": "- Used to target  which webhook to deactivate based on the subaccount it is configured for.\n- Use the `subaccountid` of the webhook to target a webhook set for a specific subaccount.\n- Use `*` to target a webhook with a subAccount-wide scope.",
                      "example": "Onion_Marketing"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["CADR", "MSG", "CABM"],
                      "description": "This parameter is not mandatory.\n- Sets the type of webhook to be delete.\n- Possible values are:\n  * `CADR` for delivery receipts\n  * `MSG` for inbound messages\n  * `CABM` for Messaging Apps Business Management Updates\n- When not provided, webhooks will be deleted for only CADR and MSG."
                    }
                  },
                  "required": ["subAccountId"]
                }
              }
            }
          },
          "description": "For this request, the subaccount and type (both required) are used to identify which webhook to target and delete.\n\n*NB: the * character will only be used for targeting webhooks configured with a global subaccount or global product scope: it does not act as a wild-card to delete all webhooks.*",
          "x-examples": {
            "application/json": [
              {
                "subAccountId": "Onion_Marketing"
              },
              {
                "subAccountId": "*"
              }
            ]
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Sending a DELETE request on this endpoint allows to **remove a configured webhook for an account or a subaccount** ."
      }
    },
    "/api/v1/subaccounts/{subAccountId}/messages/batch/{batchId}": {
      "delete": {
        "tags": ["Send Message API"],
        "summary": "Cancel batch of scheduled message",
        "description": "- Sending a DELETE request on this this endpoint allows to **cancel a batch of scheduled messages** that has not been sent yet.\n- This method should be used to cancel a batch of scheduled messages sent by  previously submitting a POST request to either the \"many\" or \"many compact\" endpoint.\n- To cancel a batch of scheduled messages, use its *batchId* to target it.\n\n### URL\n* In the original POST request used to schedule the batch of messages, you used a specific subaccountid and the API responded with a batchID.\n* You need to use both as path parameters in order to send your DELETE request successfully as shown below:\n`https://chatapps.8x8.com/api/v1/subaccounts/{subAccountId}/messages/batch/{batchId}`\n\n> You must replace `{subAccountId}` and `{batchId}` in the URL above with the subaccountid you used to schedule the messages in the first place and the batchId you got in response.",
        "operationId": "cancel-many-chat-apps-messages",
        "parameters": [
          {
            "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
          },
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cancelledCount": {
                      "type": "integer",
                      "description": "Number of cancelled messages"
                    }
                  }
                },
                "example": {
                  "cancelledCount": 10
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/subaccounts/{subAccountId}/files": {
      "post": {
        "parameters": [
          {
            "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1lon/parameters/0"
          }
        ],
        "responses": {
          "201": {
            "description": "Success response",
            "headers": {
              "Location": {
                "description": "The relative path of the uploaded file. E.g., '/files/a35079cf316.txt?token=CfDJ8OYraJuXjBNOtG3'.",
                "schema": {
                  "type": "string",
                  "format": "uri"
                },
                "example": "/files/a35079cf316.txt?token=CfDJ8OYraJuXjBNOtG3"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File name of the uploaded file."
                    },
                    "token": {
                      "type": "string",
                      "description": "A token required for downloading the uploaded file."
                    }
                  },
                  "required": ["fileName", "token"],
                  "description": "Successful file upload response",
                  "title": "File upload response"
                },
                "examples": {
                  "response": {
                    "value": {
                      "fileName": "a35079cf31654554901f132605d03b7f.jpeg",
                      "token": "CfDJ8LDJllfRzmJJqm5aey-8vihWOltfV6hJvmT_hJ0UihEfy3TaXXx2rVO5yjakRHn7VZGyeWRVxU_cTLedSm_c7JoQGdXWktv96CBYUdMg3cGD2I0Uvru6oSj5SjdiF2ggsoeH8bXxxiwhb9qYXRrc4Qk1CdMj2yLAIKFxXBSXIn2VLng-EYPpyB-OYihYAxsCEfDQ0e5Xd6Y0fhfsotvTxjR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1api~1v1~1accounts~1%7BaccountId%7D~1webhooks/get/responses/401"
          },
          "413": {
            "description": "Payload too large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 7001,
                  "message": "Request size must not exceed 100 MB",
                  "errorId": "7aea5f0a-712c-4b0f-b751-b35400b3feae",
                  "timestamp": "2018-08-04T09:25:40.9235752+00:00"
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1api~1v1~1files/get/responses/500"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "object",
                    "description": "The file. Refer to https://developer.8x8.com/connect/reference/supported-chat-apps-content-type#whatsapp for the accepted file types and sizes."
                  }
                },
                "required": ["file"],
                "title": "File upload request",
                "description": "File upload request"
              },
              "examples": {
                "Upload a JPEG image file": {
                  "value": {
                    "file": {}
                  }
                }
              }
            }
          }
        },
        "operationId": "Upload-File",
        "summary": "Upload file",
        "tags": ["File Upload API"]
      }
    },
    "/api/v1/files": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "CfDJ8LDJllfRzmJJqm5aey-8vihWOltfV6hJvmT_hJ0UihEfy3TaXXx2rVO5yjakRHn7VZGyeWRVxU_cTLedSm_c7JoQGdXWktv96CBYUdMg3cGD2I0Uvru6oSj5SjdiF2ggsoeH8bXxxiwhb9qYXRrc4Qk1CdMj2yLAIKFxXBSXIn2VLng-EYPpyB-OYihYAxsCEfDQ0e5Xd6Y0fhfsotvTxjR"
            },
            "in": "query",
            "name": "token",
            "description": "File token"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to download URL if the file is found.",
            "content": {}
          },
          "404": {
            "description": "The entity doesn't exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 4018,
                  "message": "Invalid jobId",
                  "errorId": "aa400d4b-fffe-ea11-8277-00155d4ff7ed",
                  "timestamp": "2020-09-25T07:18:22.78Z"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1subaccounts~1%7BsubAccountId%7D~1messages~1%7Bumid%7D/delete/responses/400/content/application~1json/schema"
                },
                "example": {
                  "code": 2000,
                  "message": "Internal server error",
                  "errorId": "db9dced4-3534-4d86-9d18-6b448af0d621",
                  "timestamp": "2018-07-02T09:42:38.8988997+00:00"
                }
              }
            }
          }
        },
        "operationId": "Download-File",
        "summary": "Download file",
        "tags": ["File Upload API"]
      }
    }
  },
  "components": {
    "parameters": {
      "group-id": {
        "name": "groupId",
        "in": "path",
        "required": true,
        "description": "Chat group ID",
        "schema": {
          "type": "string"
        }
      },
      "whatsapp-id": {
        "name": "whatsAppId",
        "in": "path",
        "required": true,
        "description": "WhatsApp instance id",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "webhook": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "http",
        "scheme": "bearer",
        "description": "* 8x8 SMS API accepts an **ApiKey Bearer Token** authentication method.\n\n* You can generate  tokens from your customer portal  [https://connect.8x8.com/](https://connect.8x8.com/)\n\n* You need to include the following header in your requests: `Authorization: Bearer {apiKey}`\n\n> **Note**: Replace the `{apiKey}` placeholder with the key generated from the customer portal.\n---\nIf you haven't created your account yet, please go to 8x8 website [https://connect.8x8.com](https://connect.8x8.com) to sign up.\n"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}

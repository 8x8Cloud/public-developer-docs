{
  "openapi": "3.0.0",
  "info": {
    "description": "8x8 Contact Center Customer Experience (Customer Experience) is a streaming analytics application which provides contact center managers and supervisors with a real-time detailed view of their caller's experience once the call enters the contact center instance. Customer Experience provides detailed and aggregate views of all call interactions to and from the contact center instance. The Customer Experience endpoint of the API enables you to obtain historical call interaction data that you can use for further insights and solution development.  \n\nFor more information about Customer Experience, refer to the [Contact Center Customer Experience User Help](https://support.8x8.com/us/Manuals_and_User_Guides/Products/Virtual_Contact_Center_Manuals_and_User_Guides).  \n\nYour 8x8 associate will provide you with an `8x8_apikey` and access token.\n_**This page is in the Beta stage. For step-by-step instructions on using the Customer Experience API refer to the [**Customer Experience Use Case**](https://8x8gateway-8x8apis.apigee.io/customer-experience-use-case).**_ \n\nFor additional information contact your [**8x8 representative**](mailto:vcc-dev@8x8.com). ",
    "version": "1.0.0",
    "title": "8x8 Contact Center Customer Experience",
    "termsOfService": "https://www.8x8.com/terms-and-conditions"
  },
  "servers": [{ "url": "https://api.8x8.com/customerexperience/v1" }],
  "paths": {
    "/recentCallData/{region}": {
      "post": {
        "tags": ["Customer Experience Data"],
        "summary": "Get Customer Experience Data",
        "description": "This path generates the customer experience survey call data records.",
        "operationId": "recentcalldata",
        "parameters": [
          {
            "name": "region",
            "in": "path",
            "required": true,
            "description": "This parameter represents the region for your tenant (either the U.S. or U.K.).",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DataRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DataResponse" }
              }
            }
          },
          "400": {
            "description": "Bad request, the server is unable to process the request sent by the client due to invalid syntax"
          },
          "401": { "description": "Authentication error" },
          "500": { "description": "Internal Server Error" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": { "type": "apiKey", "in": "header", "name": "8x8-apikey" },
      "Token": { "type": "apiKey", "in": "header", "name": "token" }
    },
    "schemas": {
      "DataRequest": {
        "type": "object",
        "required": [
          "duration",
          "page",
          "rows",
          "tenantId",
          "callDuration",
          "timeInQueue",
          "timeInIVR",
          "transferCount",
          "agentCallDuration",
          "agentHoldDuration",
          "agentHoldCount",
          "agentMuteCount"
        ],
        "properties": {
          "duration": {
            "type": "string",
            "description": "Possible values include today, yesterday, the current week, the current month, or `allhistory` for the entire repository of Post Call Survey (PCS) Call Data Records (CDRs) - Note that if you are passing both the timeRange and duration properties in your request, then the API request defaults to the provided timeRange value."
          },
          "page": {
            "type": "string",
            "description": "Sets the number of pages for your return output - For example, if the number of records matched with your query is 2000 but the number of rows set is 50, then 50 records are returned on one page. To obtain the next set of 50 rows of records, increase the page size by 1 (page size in output header using + 1) in your follow-up requests."
          },
          "rows": {
            "type": "string",
            "description": "Indicates the number of call records required for each request"
          },
          "tenantId": {
            "type": "string",
            "description": "The tenant ID used in execution of the request"
          },
          "timezone": {
            "type": "string",
            "description": "The Internet Assigned Numbers Authority (IANA) time zone specifier used in translating and rendering timestamps"
          },
          "timeRange": {
            "type": "string",
            "description": "The time and date range of the PCS in milliseconds (ms)    \nFor example, in the range 1535526000000 ms to 1535612340000 ms, the first value equates to Wed Aug 29 2018 00:00:00, and is the number of ms starting on January 1, 1970."
          },
          "callDuration": {
            "type": "string",
            "description": "The call duration for a specific time period (e.g., calls that last from 1 to 45 seconds) Example values include:   \n* **Sec: 60, 300**: Lists all the calls that have a duration between 60 and 300 seconds    \n* **Sec: 60, -1**: Lists all the calls that have a duration greater than or equal to 60 seconds     "
          },
          "timeInQueue": {
            "type": "string",
            "description": "Length of time a call was in a hold queue - This shows the total wait time before connecting to an agent, and includes the time spent in multiple queues (such as if the call was transferred other queues). Example values include: * **Sec: 60, 300**: Lists all the calls that have a queue time between 60 and 300 seconds    \n* **Sec: 60, -1**: Lists all the calls that have a queue time greater than or equal to 60 seconds    "
          },
          "timeInIVR": {
            "type": "string",
            "description": "The amount of time a call or transaction spent in Interactive Voice Response (IVR) before it was routed to a queue or agent. This includes the time spent in multiple IVR menus.  Example values include:   \n* **Sec: 60, 300**: Lists all the calls that have an IVR time between 60 and 300 seconds    \n* **Sec: 60, -1**: Lists all the calls that have an IVR time greater than or equal to 60 seconds     "
          },
          "transferCount": {
            "type": "string",
            "description": "The number of times a call was transferred (e.g., forward to another queue, forward to another number, or forward to another agent).  Example values include:   \n* **Range: 1, 10**: Lists all the calls that have a transfer count between 1 and 10 times    \n* **Range: 1, -1**:  Lists all the calls that have at least one transfer     "
          },
          "agentCallDuration": {
            "type": "string",
            "description": "The amount of time agents spent handling calls (e.g., agent speaking with the customer).  Example values include:   \n* **Sec: 60, 300**: Lists all the calls that have an agent handling time between 60 and 300 seconds    \n* **Sec: 60, -1**: Lists all the calls that have an agent handling time greater than or equal to 60 seconds     \n\n\n**Note**: A value of -1 indicates an unbounded value."
          },
          "agentHoldDuration": {
            "type": "string",
            "description": "The amount of time that the agent left a call on hold.  Example values include:   \n* **Sec: 60, 300**: Lists all the calls that have an agent hold time between 60 and 300 seconds    \n* **Sec: 60, -1**: Lists all the calls that have an agent hold time greater than or equal to 60 seconds    "
          },
          "agentHoldCount": {
            "type": "string",
            "description": "The number of times a call was placed on hold by an agent.  Example values include:   \n* **Range: 1, 10**: Lists all the times that an agent placed a call on hold between 1 and 10 times    \n* **Range: 1, -1**: Lists all the times that an agent placed a call on hold at least once    "
          },
          "agentMuteCount": {
            "type": "string",
            "description": "The number of times a call was muted by an agent. The ability to count the number of mutes can address a possible need for either Hold or Mute SLA reports. Additionally, this parameter may detect the times that an agent mutes customers to fake one-way audio.  Example values include:   \n* **Range: 1, 10**: Lists all the times that an agent muted the call between 1 and 10 times    \n* **Range: 1, -1**: Lists all the times that an agent muted the call at least once     "
          },
          "tenantChannels": {
            "type": "array",
            "description": "The list of all channels that were selected in your request (you can find the channel number in Configuration Manager)",
            "items": {
              "type": "string",
              "description": "The list of all channels that were selected in your request (you can find the channel number in Configuration Manager)"
            }
          },
          "tenantQueues": {
            "type": "array",
            "description": "The list of all queues that were selected in your request (you can find the queue ID in Configuration Manager)",
            "items": {
              "type": "string",
              "description": "The list of all queues that were selected in your request (you can find the queue ID in Configuration Manager)"
            }
          },
          "tenantAgents": {
            "type": "array",
            "description": "The list of all agents that were selected in your request (you can find the agent ID in Configuration Manager)\nRefer to the [Virtual Contact Center Documentation](https://support.8x8.com/us/Manuals_and_User_Guides/Products/Virtual_Contact_Center_Manuals_and_User_Guides).",
            "items": {
              "type": "string",
              "description": "The comma-separated list of agents"
            }
          },
          "callerName": {
            "type": "array",
            "description": "The caller name or number (you can search your data for specific phone numbers or callees)",
            "items": {
              "type": "string",
              "description": "The caller name or number (you can search your data for specific phone numbers or callees)"
            }
          }
        }
      },
      "DataResponse": {
        "type": "object",
        "properties": {
          "hits": {
            "type": "integer",
            "description": "The total number of records matched with the criteria request"
          },
          "sortColumn": {
            "type": "string",
            "description": "The column used for sorting your obtained CDRs"
          },
          "sortOrder": {
            "type": "string",
            "description": "The CDR sort order (it can be either ascending and descending)"
          },
          "page": {
            "type": "integer",
            "description": "Sets the number of pages for your return output. For example, if the number of records matched with your query is 2000 but the number of rows set is 50, then 50 records are returned on one page. To obtain the next set of 50 rows of records, increase the page size by 1 (page size in output header + 1) in your follow up requests."
          },
          "rows": {
            "type": "integer",
            "description": "The number of records or calls identified in the request."
          },
          "columns": {
            "type": "array",
            "description": "List of all columns displayed on the output page",
            "items": {
              "type": "string",
              "description": "List of all columns displayed on the output page"
            }
          },
          "data": {
            "type": "array",
            "description": "The following data response types are supported.",
            "items": {
              "type": "object",
              "description": "",
              "properties": {
                "queueId": {
                  "type": "string",
                  "description": "The ID of the queue that the call was placed in"
                },
                "callDateOnly": {
                  "type": "string",
                  "description": "The date that the call was made (enables column sorting by call date)"
                },
                "callType": {
                  "type": "string",
                  "description": "The type of calls (e.g., Inbound or Outbound)    \nNote: The display label on the UI is Call Direction."
                },
                "holdDuration": {
                  "type": "string",
                  "description": "The length of time a call was placed on hold"
                },
                "abandonTime": {
                  "type": "string",
                  "description": "The length of time from when the call enters the queue until the caller hangs up before speaking to an agent"
                },
                "hungupBy": {
                  "type": "string",
                  "description": "The party who disconnected the call, such as an agent, customer, or system"
                },
                "destinationNumber": {
                  "type": "string",
                  "description": "The destination number, such as web callback"
                },
                "tenantId": {
                  "type": "string",
                  "description": "The tenant ID"
                },
                "transactionId": {
                  "type": "string",
                  "description": "The transaction ID of the call"
                },
                "timeInIVR": {
                  "type": "string",
                  "description": "The amount of time that the call was in IVR, represented in hours, minutes, seconds, and milliseconds"
                },
                "waitTime": {
                  "type": "string",
                  "description": "The wait time before the caller speaks to an agent"
                },
                "callSubType": {
                  "type": "string",
                  "description": "The type of call (e.g., Queued, No Queue, Verification)    \nNote: The display label on the UI is Call Type."
                },
                "transferCount": {
                  "type": "string",
                  "description": "The number of times the call was transferred"
                },
                "callTime": {
                  "type": "string",
                  "description": "The time that the call was made"
                },
                "callerName": {
                  "type": "string",
                  "description": "The caller’s name or number as it is presented to 8x8 by the caller's phone carrier"
                },
                "agentId": {
                  "type": "string",
                  "description": "The ID of the agent who handled the call"
                },
                "callerNumber": {
                  "type": "string",
                  "description": "The caller's phone number"
                },
                "callDate": {
                  "type": "string",
                  "description": "The date and time when the call was made"
                },
                "muteDuration": {
                  "type": "integer",
                  "description": "The length of time an agent has muted a customer on a call"
                },
                "maximumHoldDuration": {
                  "type": "string",
                  "description": "The longest hold time for each call"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [{ "ApiKeyAuth": [], "Token": [] }],
  "x-readme": { "explorer-enabled": true, "proxy-enabled": true }
}

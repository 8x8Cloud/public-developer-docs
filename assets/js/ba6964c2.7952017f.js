"use strict";(self.webpackChunk_8x8_developer_docs=self.webpackChunk_8x8_developer_docs||[]).push([[27534],{1342:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"connect/docs/status-error-code","title":"Status Code and Status Message (Voice Messaging & IVR)","description":"| Status Code | Message                                                                                                                                                                                                                                 |","source":"@site/docs/connect/docs/status-error-code.md","sourceDirName":"connect/docs","slug":"/connect/docs/status-error-code","permalink":"/connect/docs/status-error-code","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebarConnectReference","previous":{"title":"Call Action Handling (IVR)","permalink":"/connect/docs/call-action-handling-ivr"},"next":{"title":"Get recording push config for your account","permalink":"/connect/reference/get-recording-push-config-information"}}');var s=t(74848),d=t(28453);const i={},c="Status Code and Status Message (Voice Messaging & IVR)",l={},o=[];function a(n){const e={br:"br",h1:"h1",header:"header",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"status-code-and-status-message-voice-messaging--ivr",children:"Status Code and Status Message (Voice Messaging & IVR)"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Status Code"}),(0,s.jsx)(e.th,{children:"Message"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"1"}),(0,s.jsx)(e.td,{children:"Created"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1001"}),(0,s.jsx)(e.td,{children:"Invalid JSON request body"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1002"}),(0,s.jsx)(e.td,{children:"Speech profile or language parameter invalid"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1003"}),(0,s.jsx)(e.td,{children:"Valid maxDigits required when minDigits provided"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1004"}),(0,s.jsx)(e.td,{children:"DTMF callback url not provided"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1005"}),(0,s.jsx)(e.td,{children:"Valid overallTimeout is required when digitTimeout provided"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1006"}),(0,s.jsx)(e.td,{children:"OverallTimeout should be greater than digitTimeout"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1007"}),(0,s.jsx)(e.td,{children:"Invalid action type was used. Accepted action type is [say, sayAndcapture, makeCall, hangup, playFile]"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1008"}),(0,s.jsx)(e.td,{children:"Valid maxDigits is required when completeOnHash is false"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1009"}),(0,s.jsxs)(e.td,{children:["Invalid call flow entry provided. [Additional error details here].",(0,s.jsx)(e.br,{}),"Eg: Invalid call flow entry provided. $.callflow[0].params.text: is missing but it is required"]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1010"}),(0,s.jsx)(e.td,{children:"Some actions are provided beyond the allowed count"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1011"}),(0,s.jsx)(e.td,{children:"Multiple destination phone numbers found in the request"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1012"}),(0,s.jsx)(e.td,{children:"Invalid Callflow : Incorrect use of action Hangup"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1013"}),(0,s.jsx)(e.td,{children:"Invalid Callflow : First action should be a MakeCall action"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1014"}),(0,s.jsx)(e.td,{children:"Source or caller ID is not allowed"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1015"}),(0,s.jsx)(e.td,{children:"The validity period of the call flow request has expired"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1016"}),(0,s.jsx)(e.td,{children:"Invalid Callflow Content: Some special characters are invalid/unaccepted"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1017"}),(0,s.jsx)(e.td,{children:"Invalid MSISDN format in Destination"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1018"}),(0,s.jsxs)(e.td,{children:['"Invalid Callflow: " or ',(0,s.jsx)(e.br,{}),'"Execute Scenario cannot be processed together with other actions']})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1019"}),(0,s.jsx)(e.td,{children:"Invalid Callflow Content: scenarioName is null or empty"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-1020"}),(0,s.jsx)(e.td,{children:"Invalid Callflow: Invalid scenarioName or the account doesn't have permission to execute this scenario"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-9999"}),(0,s.jsx)(e.td,{children:"An unknown error has occurred."})]})]})]})]})}function h(n={}){const{wrapper:e}={...(0,d.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>c});var r=t(96540);const s={},d=r.createContext(s);function i(n){const e=r.useContext(d);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),r.createElement(d.Provider,{value:e},n.children)}}}]);
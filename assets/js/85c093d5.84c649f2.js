"use strict";(self.webpackChunk_8x8_developer_docs=self.webpackChunk_8x8_developer_docs||[]).push([[29390],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(96540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}},29274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"jaas/docs/customize-ui-overview","title":"Overview","description":"The meeting\'s UI can be customised through the configOverwrite and interfaceConfigOverwrite objects which are part of the JitsiMeetExternalAPI\'s options object. For a list of all possible values, please refer to :","source":"@site/docs/jaas/docs/customize-ui-overview.md","sourceDirName":"jaas/docs","slug":"/jaas/docs/customize-ui-overview","permalink":"/jaas/docs/customize-ui-overview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebarJaas","previous":{"title":"JaaS Browser Support","permalink":"/jaas/docs/jaas-browser-support"},"next":{"title":"How to set default language","permalink":"/jaas/docs/customize-ui-default-language"}}');var i=n(74848),s=n(28453);const r={},c="Overview",a={},l=[];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,i.jsxs)(t.p,{children:["The meeting's UI can be customised through the ",(0,i.jsx)(t.em,{children:"configOverwrite"})," and ",(0,i.jsx)(t.em,{children:"interfaceConfigOverwrite"})," objects which are part of the ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"JitsiMeetExternalAPI"})}),"'s ",(0,i.jsx)(t.em,{children:"options"})," object. For a list of all possible values, please refer to :"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/config.js",children:"config.js"})," for possible configOverwrite object values."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/interface_config.js",children:"interface_config.js"})," for possible interfaceConfigOverwrite object values."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Note that not all options found in the two config files are overwritable."}),"\n",(0,i.jsx)(t.p,{children:"Please see below a snippet on how to use the config and interface config overwrites in your application:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"const domain = '8x8.vc';\nconst options = {\n    ...\n    configOverwrite: { startWithAudioMuted: true },\n    interfaceConfigOverwrite: { DISABLE_DOMINANT_SPEAKER_INDICATOR: true },\n    ...\n};\nconst api = new JitsiMeetExternalAPI(domain, options);\n\n"})}),"\n",(0,i.jsx)(t.p,{children:"There is a wide array of configurable things for the conference, some of which are described in the following subsections."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunk_8x8_developer_docs=self.webpackChunk_8x8_developer_docs||[]).push([[38427],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(96540);const a={},o=i.createContext(a);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:n},e.children)}},33148:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"jaas/docs/jaas-prefs-prejoin","title":"Prejoin page","description":"The prejoin page is displayed before joining a meeting and it allows you to enter a display name and select certain video/audio devices and gives you the option to mute/unmute devices before joining. Since for JaaS joing a meeting is always authenticated because of the JWT, we might not want our users to change their display name since it is already encoded into the JWT. Also since we use the IFrame API in order to embed the meeting in our application, we can manage the selected audio/video devices and their muted state from within our application. In order to achieve this, we set prejoinPageEnabled which will disable the prejoin page, and we can pass the devices and the mute state from our application:","source":"@site/docs/jaas/docs/jaas-prefs-prejoin.md","sourceDirName":"jaas/docs","slug":"/jaas/docs/jaas-prefs-prejoin","permalink":"/production/jaas/docs/jaas-prefs-prejoin","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebarJaas","previous":{"title":"Setting up audio/video devices","permalink":"/production/jaas/docs/jaas-prefs-devices"},"next":{"title":"Meeting security","permalink":"/production/jaas/docs/jaas-prefs-security"}}');var a=t(74848),o=t(28453);const s={},r="Prejoin page",d={},c=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"prejoin-page",children:"Prejoin page"})}),"\n",(0,a.jsxs)(n.p,{children:["The prejoin page is displayed before joining a meeting and it allows you to enter a display name and select certain video/audio devices and gives you the option to mute/unmute devices before joining. Since for JaaS joing a meeting is always authenticated because of the JWT, we might not want our users to change their display name since it is already encoded into the JWT. Also since we use the ",(0,a.jsx)(n.a,{href:"https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-iframe",children:"IFrame API"})," in order to embed the meeting in our application, we can manage the selected audio/video devices and their muted state from within our application. In order to achieve this, we set ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"prejoinPageEnabled"})})," which will disable the prejoin page, and we can pass the devices and the mute state from our application:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const options = {\n    ...,\n    configOverwrite: {\n      ...\n      // disable the prejoin page\n      prejoinPageEnabled: false,\n      ...,\n      //optionally we can control the mute state on join from the emebedding application\n      startWithAudioMuted: [true/false],\n      startWithVideoMuted: [true/false]\n    },\n    ...,\n    // optionally, we can have the meeting select the devices we want\n    devices: {\n      audioInput: '\\<deviceLabel\\>',\n      audioOutput: '\\<deviceLabel\\>',\n      videoInput: '\\<deviceLabel\\>'\n    },\n    ...\n};\nconst api = new JitsiMeetExternalAPI(domain, options);\n\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);
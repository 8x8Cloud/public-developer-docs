"use strict";(self.webpackChunk_8x8_developer_docs=self.webpackChunk_8x8_developer_docs||[]).push([[19739],{28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>a});var o=n(96540);const s={},i=o.createContext(s);function r(t){const e=o.useContext(i);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),o.createElement(i.Provider,{value:e},t.children)}},98713:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"jaas/docs/customize-ui-buttons","title":"How to manage UI buttons","description":"UI buttons visibility is controlled through a configOverwrite property called toolbarButtons","source":"@site/docs/jaas/docs/customize-ui-buttons.md","sourceDirName":"jaas/docs","slug":"/jaas/docs/customize-ui-buttons","permalink":"/production/jaas/docs/customize-ui-buttons","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebarJaas","previous":{"title":"How to set default language","permalink":"/production/jaas/docs/customize-ui-default-language"},"next":{"title":"Tutorial: Using Custom Buttons with the Iframe API","permalink":"/production/jaas/docs/custom-buttons-iframe-api"}}');var s=n(74848),i=n(28453);const r={},a="How to manage UI buttons",c={},l=[];function u(t){const e={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"how-to-manage-ui-buttons",children:"How to manage UI buttons"})}),"\n",(0,s.jsxs)(e.p,{children:["UI buttons visibility is controlled through a ",(0,s.jsx)(e.em,{children:"configOverwrite"})," property called ",(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.code,{children:"toolbarButtons"})})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"not passing this property at all enables all buttons on the UI"}),"\n",(0,s.jsx)(e.li,{children:"passing this property with an empty array hides all buttons from the conference's UI"}),"\n",(0,s.jsx)(e.li,{children:"passing this property with certain values will only enable buttons corresponding to the given values"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["For a list of all controllable buttons please check the ",(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.code,{children:"toolbarButtons"})})," property of ",(0,s.jsx)(e.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/config.js",children:"config.js"})]}),"\n",(0,s.jsx)(e.p,{children:"Example snippet for showing only the main meeting control buttons: hangup and mute/unmute audio and video:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const domain = '8x8.vc';\nconst options = {\n    ...\n    configOverwrite: { toolbarButtons: ['hangup', 'microphone', 'camera'], },\n    ...\n};\n\nconst api = new JitsiMeetExternalAPI(domain, options);\n\n"})})]})}function d(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(u,{...t})}):u(t)}}}]);
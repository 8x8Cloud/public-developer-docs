"use strict";(self.webpackChunk_8x8_developer_docs=self.webpackChunk_8x8_developer_docs||[]).push([[46801],{25895:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>f,default:()=>k,frontMatter:()=>u,metadata:()=>a,toc:()=>b});const a=JSON.parse('{"id":"actions-events/reference/patchcctransaction","title":"Patch a conversation details.","description":"Patch a conversation details.","source":"@site/docs/actions-events/reference/patchcctransaction.api.mdx","sourceDirName":"actions-events/reference","slug":"/actions-events/reference/patchcctransaction","permalink":"/actions-events/reference/patchcctransaction","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"patchcctransaction","title":"Patch a conversation details.","description":"Patch a conversation details.","sidebar_label":"Patch a conversation details.","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"patch api-method","info_path":"actions-events/reference/contact-center-chat-gateway","custom_edit_url":null},"sidebar":"sidebarActionsEventsReference","previous":{"title":"Update a conversation details.","permalink":"/actions-events/reference/putcctransaction"},"next":{"title":"Retrieves conversation details.","permalink":"/actions-events/reference/getcctransaction-1"}}');var i=n(74848),r=n(28453),s=n(57742),o=n.n(s),c=n(78178),p=n.n(c),l=n(19624),d=n.n(l),m=n(96226),h=n.n(m),g=(n(77675),n(19365),n(51107));const u={id:"patchcctransaction",title:"Patch a conversation details.",description:"Patch a conversation details.",sidebar_label:"Patch a conversation details.",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"patch api-method",info_path:"actions-events/reference/contact-center-chat-gateway",custom_edit_url:null},f=void 0,y={},b=[];function v(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"Patch a conversation details."}),"\n",(0,i.jsx)(o(),{method:"patch",path:"/chat-gateway/v1/conversations/{conversationId}",context:"endpoint"}),"\n",(0,i.jsx)(t.p,{children:"Patch a conversation details."}),"\n",(0,i.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(p(),{parameters:[{name:"conversationId",in:"path",required:!0,description:"Conversation identifier.",schema:{type:"string",format:"string",example:"125"}},{name:"X-8x8-Tenant",in:"header",required:!1,description:"Tenant ID, it is going to be mandatory if customer has more than one CC tenant in his organisation.",schema:{type:"string",format:"string"},example:"TheTenant"}]}),"\n",(0,i.jsx)(d(),{title:"Body",body:{description:"Defines the update transaction request payload.",required:!0,content:{"application/json":{schema:{anyOf:[{type:"object",properties:{assignment:{type:"object",properties:{type:{type:"string",format:"string","x-extensible-enum":["queue","script"],default:"queue"},id:{type:"string",format:"string",description:"Queue or Script identifier, depending of which type is being used.",example:"100"}}}},title:"AssignmentField"},{type:"object",properties:{user:{type:"object",description:"The attached data which contains user details. The data fields include `name`, `userId`, `customerId`, `email`, `phone`, `company`, `caseId`, `language`, `ipaddress` and `timezoneOffset` are predefined; however, you can also add any metadata. Any information about the user can be attached to a Chat API conversation, and it will be shown to Contact Center agent as part of transaction details in the chat panel.  \nFor example: `{  name: John Doe, email: john.doe@email.com, language: en, additionalProperties: [ { key: myCustomProperty, value: customValue }, { key: anyKey, value: anyValue } ] }`",properties:{name:{type:"string",format:"string",description:"Sets the Contact Center user\u2019s name. The Contact Center agent views this name in the chat conversation. For example: John Doe"},userId:{type:"string",format:"string",description:"When using 8x8's native CRM, the userId could match a customerId in 8x8's CRM and that will trigger a screen pop for agent."},email:{type:"string",format:"email"},phone:{type:"string",format:"string"},company:{type:"string",format:"string"},caseId:{type:"string",format:"string"},language:{type:"string",format:"string",default:"en",description:"The language of the user. Based on this property the user is assigned to an agent who speaks their language.\n\nThe default value is English (`en`).  \n\nThe sender language can be one of the following:\n* `en` => English\n* `ru` => \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n* `de` => Deutsch\n* `ja` => \u65e5\u672c\u8a9e\n* `es` => Espa\xf1ol\n* `fr` => Fran\xe7ais\n* `pt` => Portugu\xeas\n* `it` => Italiano\n* `pl` => Polski\n* `hr` => Hrvatski\n* `nl` => Dutch\n* `ar` => \u0627\u0644\u0639\u0631\u064a\u0629\n* `da` => Dansk\n* `ko` => \ud55c\uad6d\n* `no` => Norsk\n* `sv` => Svenska\n* `vi` => Ti\u1ebfng Vi\u1ec7t\n* `cy` => Cymraeg\n* `th` => \u0e44\u0e17\u0e22\n* `zh-CN` => \u7b80\u4f53\u4e2d\u6587\n* `zh-TW` => \u4e2d\u570b\u50b3\u7d71",title:"Language"},additionalProperties:{type:"array",maxProperties:30,items:{allOf:[{type:"object",properties:{key:{type:"string",format:"string",example:"customKey"},value:{type:"string",format:"string",example:"customValue"}},example:{key:"senderName",value:"John Doe"}}],title:"AdditionalPropertiesPayload"}}}}},title:"ConversationUserData"}],title:"PatchTransactionRequest"}}}}}),"\n",(0,i.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"Returns the conversation details.",content:{"application/hal+json":{schema:{allOf:[{type:"object",properties:{channelId:{type:"string",format:"string",description:"Channel ID for which the transaction will be created.",example:"25"}},title:"ChannelIdentifierField"},{type:"object",properties:{assignment:{type:"object",properties:{type:{type:"string",format:"string","x-extensible-enum":["queue","script"],default:"queue"},id:{type:"string",format:"string",description:"Queue or Script identifier, depending of which type is being used.",example:"100"}}}},title:"AssignmentField"},{type:"object",properties:{user:{type:"object",description:"The attached data which contains user details. The data fields include `name`, `userId`, `customerId`, `email`, `phone`, `company`, `caseId`, `language`, `ipaddress` and `timezoneOffset` are predefined; however, you can also add any metadata. Any information about the user can be attached to a Chat API conversation, and it will be shown to Contact Center agent as part of transaction details in the chat panel.  \nFor example: `{  name: John Doe, email: john.doe@email.com, language: en, additionalProperties: [ { key: myCustomProperty, value: customValue }, { key: anyKey, value: anyValue } ] }`",properties:{name:{type:"string",format:"string",description:"Sets the Contact Center user\u2019s name. The Contact Center agent views this name in the chat conversation. For example: John Doe"},userId:{type:"string",format:"string",description:"When using 8x8's native CRM, the userId could match a customerId in 8x8's CRM and that will trigger a screen pop for agent."},email:{type:"string",format:"email"},phone:{type:"string",format:"string"},company:{type:"string",format:"string"},caseId:{type:"string",format:"string"},language:{type:"string",format:"string",default:"en",description:"The language of the user. Based on this property the user is assigned to an agent who speaks their language.\n\nThe default value is English (`en`).  \n\nThe sender language can be one of the following:\n* `en` => English\n* `ru` => \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n* `de` => Deutsch\n* `ja` => \u65e5\u672c\u8a9e\n* `es` => Espa\xf1ol\n* `fr` => Fran\xe7ais\n* `pt` => Portugu\xeas\n* `it` => Italiano\n* `pl` => Polski\n* `hr` => Hrvatski\n* `nl` => Dutch\n* `ar` => \u0627\u0644\u0639\u0631\u064a\u0629\n* `da` => Dansk\n* `ko` => \ud55c\uad6d\n* `no` => Norsk\n* `sv` => Svenska\n* `vi` => Ti\u1ebfng Vi\u1ec7t\n* `cy` => Cymraeg\n* `th` => \u0e44\u0e17\u0e22\n* `zh-CN` => \u7b80\u4f53\u4e2d\u6587\n* `zh-TW` => \u4e2d\u570b\u50b3\u7d71",title:"Language"},additionalProperties:{type:"array",maxProperties:30,items:{allOf:[{type:"object",properties:{key:{type:"string",format:"string",example:"customKey"},value:{type:"string",format:"string",example:"customValue"}},example:{key:"senderName",value:"John Doe"}}],title:"AdditionalPropertiesPayload"}}}}},title:"ConversationUserData"},{type:"object",properties:{id:{type:"string",example:"vXg39aMTRlq4xCBFaUCTlA",description:"Conversation / Transaction identifier."},state:{type:"string",enum:["created","active","idle"],example:"idle",description:"Conversation state."}}}],title:"ConversationResult"}}}},401:{description:"Contains a description of the error.",content:{"application/problem+json":{schema:{type:"object",properties:{message:{type:"string",example:"Invalid Credentials"},code:{type:"string",example:"KA:1234567"}},title:"UnauthorizedProblem"}}}},403:{description:"Contains a descriptive response.",content:{"application/problem+json":{schema:{type:"object",properties:{message:{type:"string",description:"Error message.",example:"Access is denied."},errors:{type:"array",items:{type:"object",properties:{message:{type:"string",example:"Access is denied"},code:{type:"string",example:"access_denied"}}}},referenceId:{type:"string",example:"dacd0dd252723a2"}},title:"ForbiddenViolationProblem"}}}},404:{description:"Contains a descriptive information.",content:{"application/problem+json":{schema:{type:"object",properties:{message:{type:"string",description:"Error message.",example:"Resource of type <<resourceType>> with id <<resourceId>> was not found."},errors:{type:"array",items:{type:"string",example:"Tenant <<tenantId>> does not belong to customer <<customerId>>."}}},title:"ResourceNotFoundProblem"}}}},500:{description:"Contains a description of the error.",content:{"application/problem+json":{schema:{type:"object",properties:{message:{type:"string",description:"Error message.",example:"Internal error."},errors:{type:"array",items:{type:"object",properties:{code:{type:"string",description:"Unique error code.",example:"invalid_queue"},message:{type:"string",description:"Free text error description.",example:"Queue ID 112 is invalid."}}}}},title:"GenericExceptionPayload"}}}},default:{description:"Contains a description of the error.",content:{"application/problem+json":{schema:{type:"object",properties:{message:{type:"string",description:"Error message.",example:"Internal error."},errors:{type:"array",items:{type:"object",properties:{code:{type:"string",description:"Unique error code.",example:"invalid_queue"},message:{type:"string",description:"Free text error description.",example:"Queue ID 112 is invalid."}}}}},title:"GenericExceptionPayload"}}}}}})]})}function k(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}}}]);
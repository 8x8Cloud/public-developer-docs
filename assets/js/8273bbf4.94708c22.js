"use strict";(self.webpackChunk_8x8_developer_docs=self.webpackChunk_8x8_developer_docs||[]).push([[61929],{4068:(e,n,i)=>{i.d(n,{A:()=>l});const l=i.p+"assets/images/5f322a6-mobile-wavecell-sdk-lifecycle-sequence-diagram-external-c3e354183a8ef8d21c2eadd5d8a3bace.svg"},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var l=i(96540);const c={},s=l.createContext(c);function t(e){const n=l.useContext(s);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),l.createElement(s.Provider,{value:n},e.children)}},95782:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>r});const l=JSON.parse('{"id":"connect/docs/using-the-ios-sdk","title":"Using the iOS SDK","description":"* Overview","source":"@site/docs/connect/docs/using-the-ios-sdk.md","sourceDirName":"connect/docs","slug":"/connect/docs/using-the-ios-sdk","permalink":"/production/connect/docs/using-the-ios-sdk","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebarConnectDocs","previous":{"title":"iOS - Integrating the SDK","permalink":"/production/connect/docs/ios-integrating-the-sdk"},"next":{"title":"API Specification - iOS","permalink":"/production/connect/docs/api-specification-ios"}}');var c=i(74848),s=i(28453);const t={},o="Using the iOS SDK",a={},r=[{value:"Overview",id:"overview",level:2},{value:"Lifecycle",id:"lifecycle",level:2},{value:"Configuration",id:"configuration",level:2},{value:"User account",id:"user-account",level:2},{value:"CallKit",id:"callkit",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Callbacks",id:"callbacks",level:2},{value:"Log message",id:"log-message",level:3},{value:"Contact resolution",id:"contact-resolution",level:3},{value:"Audio session",id:"audio-session",level:3},{value:"Activation",id:"activation",level:4},{value:"Deactivation",id:"deactivation",level:4},{value:"Call features",id:"call-features",level:4},{value:"Place an outgoing call",id:"place-an-outgoing-call",level:3},{value:"Receive an incoming call",id:"receive-an-incoming-call",level:3},{value:"Call observer protocols",id:"call-observer-protocols",level:3},{value:"Mute a call",id:"mute-a-call",level:3},{value:"Put a call on hold",id:"put-a-call-on-hold",level:3},{value:"Hang up a call",id:"hang-up-a-call",level:3},{value:"Push Notifications",id:"push-notifications",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"using-the-ios-sdk",children:"Using the iOS SDK"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#lifecycle",children:"Lifecycle"})}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.a,{href:"#configuration",children:"Configuration"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#user-account",children:"User account"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#callkit",children:"CallKit"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#authentication",children:"Authentication"})}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.a,{href:"#callbacks",children:"Callbacks"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#log-message",children:"Log message"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#contact-resolution",children:"Contact resolution"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#audio-session",children:"Audio session"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#activation",children:"Activation"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#deactivation",children:"Deactivation"})}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.a,{href:"#call-features",children:"Call"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#place-an-outgoing-call",children:"Place an outgoing call"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#receive-an-incoming-call",children:"Receive an incoming call"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#call-observer-protocols",children:"Call observer protocols"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#mute-a-call",children:"Mute a call"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#put-a-call-on-hold",children:"Put a call on hold"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#hang-up-a-call",children:"Hang up a call"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#push-notifications",children:"Push notifications"})}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceSDK"})})," facade object is the starting point for all communications between the client and the Voice SDK."]}),"\n",(0,c.jsx)(n.h2,{id:"lifecycle",children:"Lifecycle"}),"\n",(0,c.jsxs)(n.p,{children:["The Voice SDK is designed to fit the concept of account based applications where the application has ",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"login"})})," (auto-login) and ",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"logout"})})," actions."]}),"\n",(0,c.jsx)(n.p,{children:"The SDK client initializes the Voice SDK once and then may have multiple activation/deactivation cycles following user login or logout."}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.img,{src:i(4068).A+"",title:"mobile-wavecell-sdk-lifecycle-sequence-diagram-external.svg",width:"915",height:"610"})}),"\n",(0,c.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,c.jsxs)(n.p,{children:["To configure the Voice SDK you assign the user account configuration (",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Configuration"})}),") as follows:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:" let sdk = VoiceSDK.shared\n // \u2026\n sdk.configuration = Configuration(...)\n\n"})}),"\n",(0,c.jsx)(n.p,{children:"The configuration can be updated at any time after SDK initialization."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"struct Configuration: Hashable {\n   var accountId: String\n   var userId: String\n   // \u2026  \n   var displayName: String\n   var phoneNumber: String?\n   // \u2026\n   var callKit: CallKitOptions\n}\n\n"})}),"\n",(0,c.jsx)(n.h2,{id:"user-account",children:"User account"}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"accountId"})})," and ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"userId"})})," can only be changed when the SDK is in the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:".inactive"})})," state."]}),"\n",(0,c.jsx)(n.h2,{id:"callkit",children:"CallKit"}),"\n",(0,c.jsx)(n.p,{children:"The SDK has a built-in integration with the CallKit framework."}),"\n",(0,c.jsxs)(n.p,{children:["The SDK client can use ",(0,c.jsx)(n.code,{children:"CallKitOptions"})," to customize the CallKit configuration."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"struct CallKitOptions: Hashable {\n   var localizedName: String\n   // \u2026  \n   var ringtoneSound: String?\n   // \u2026\n   var iconFileName: String?\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"callKit"})," property can only be changed when there are no active calls."]}),"\n",(0,c.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,c.jsxs)(n.p,{children:["The SDK client passes the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"jwtToken"})})," to the SDK by setting (updating) the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"authenticationContext"})})," property of ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceSDK"})})," object as follows:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"sdk.authenticationContext.jwtToken = jwtToken\nsdk.authenticationContext.callback = { [weak self] token in\n   // token refresh is requested\n   self?.refreshToken()\n}\n\n"})}),"\n",(0,c.jsx)(n.h2,{id:"callbacks",children:"Callbacks"}),"\n",(0,c.jsx)(n.p,{children:"You can modify certain aspects of SDK functionality by setting the following callbacks:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#log-message",children:"Log message"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#contact-resolution",children:"Contact resolution"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#audio-session",children:"Audio session"})}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"log-message",children:"Log message"}),"\n",(0,c.jsxs)(n.p,{children:["If the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"logMessageCallback"})})," is set, the Voice SDK stops to print messages to the console and passes them to the client:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"VoiceSDK.logMessageCallback = { module, message, level, context in\n   // print log message to the console\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The log message ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"logMessageCallback"})})," can be set before Voice SDK initialization."]}),"\n",(0,c.jsx)(n.h3,{id:"contact-resolution",children:"Contact resolution"}),"\n",(0,c.jsxs)(n.p,{children:["If the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"contactResolverCallback"})})," is set, the Voice SDK uses this callback to request the contact (caller) details when the incoming call notification (push) arrives on a device."]}),"\n",(0,c.jsxs)(n.p,{children:["The Voice SDK uses the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"displayName"})})," property value (from contact details) as the caller name on an incoming call screen."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"struct ContactInfo: Contact {\n   var contactId: String\n   var displayName: String?\n   var avatarUrl: String?\n   var phoneNumber: String?\n   // \u2026\n}\n\u2026\nVoiceSDK.contactResolverCallback = { context, completion in\n   // \u2026\n   let contact = ContactInfo(contactId: context.callerId, \n                             displayName: context.callerName, \n                             avatarUrl: nil, phoneNumber: nil)\n   completion?(contact)\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The SDK client adopts the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Contact"})})," protocol and returns the adjusted information in a ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"completion"})})," handler."]}),"\n",(0,c.jsx)(n.h3,{id:"audio-session",children:"Audio session"}),"\n",(0,c.jsxs)(n.p,{children:["The Voice SDK requests client to configure an Audio Session via ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"audioSessionConfigurationCallback"})}),"."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"VoiceSDK.audioSessionConfigurationCallback = { session in\n   do {\n      let mode: AVAudioSession.Mode = .voiceChat\n      try session.setCategory(.playAndRecord, mode: mode, options: [.allowBluetooth])\n      try session.overrideOutputAudioPort(.none)\n      try session.setPreferredIOBufferDuration(0.01)\n   } catch let error {\n      //\u2026\n   }\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The Voice SDK has ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"audioSessionActivated"})})," property which indicates if Audio Session is activated (or deactivated) by CallKit."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"var audioSessionActivated: CurrentValueSubject<Bool, Never> { get }\n\n"})}),"\n",(0,c.jsx)(n.h4,{id:"activation",children:"Activation"}),"\n",(0,c.jsxs)(n.p,{children:["To activate the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceSDK"})}),", the client invokes the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"activate"})})," function:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"func activate(completion: @escaping (_ result: Result<Void, ErrorType>) -> Void)\n\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"sdk.activate { result in\n   switch result {\n   case .success:\n   //\u2026\n   case .failure:\n   //\u2026\n   }\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Upon a ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:".success"})})," notification, the ",(0,c.jsx)(n.code,{children:"VoiceSDK"})," object transitions to the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:".active"})})," state."]}),"\n",(0,c.jsxs)(n.p,{children:["Otherwise, it comes back to the ",(0,c.jsx)(n.code,{children:".inactive"})," state."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"enum State {\n  case inactive, activating, active, deactivating\n}\n//\u2026\nsdk.state\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The client can adopt the ",(0,c.jsx)(n.code,{children:"VoiceSDKObserverProtocol"})," protocol and receive notifications on the ",(0,c.jsx)(n.code,{children:"VoiceSDK"})," object state change:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"func addObserver(_ observer: AnyObject)\n\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"sdk.addObserver(client)\n//\u2026\n\nfunc handleStateChanged(_ state: VoiceSDK.State) {\n   // \u2026\n}\n\n"})}),"\n",(0,c.jsx)(n.h4,{id:"deactivation",children:"Deactivation"}),"\n",(0,c.jsxs)(n.p,{children:["To deactivate the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceSDK"})})," client, invoke the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"deactivate"})})," function:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"func deactivate(completion: @escaping (_ result: Result<Void, ErrorType>) -> Void)\n\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"sdk.deactivate { result in\n   switch result {\n   case .success:\n   //\u2026\n   case .failure:\n   //\u2026\n   }\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Upon successful completion, the ",(0,c.jsx)(n.code,{children:"VoiceSDK"})," object transitions to an ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:".inactive"})})," state."]}),"\n",(0,c.jsx)(n.h4,{id:"call-features",children:"Call features"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#place-an-outgoing-call",children:"Place an outgoing call"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#receive-an-incoming-call",children:"Receive an incoming call"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#call-observer-protocols",children:"Call observer protocol"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#mute-a-call",children:"Mute a call"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#put-a-call-on-hold",children:"Put a call on hold"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"#hang-up-a-call",children:"Hang up a call"})}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"place-an-outgoing-call",children:"Place an outgoing call"}),"\n",(0,c.jsx)(n.p,{children:"When an outgoing call is placed the following function is used:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"func placeCall(callType: CallType, to callee: Contact,\n               completion: @escaping (Result<VoiceCall, ErrorType>) -> Void)\n\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"//\u2026\nlet completionBlock: (Result<VoiceCall, ErrorType>) -> Void = { result in\n   switch result {\n   case .success(let call):\n   // present UI\n   default: break\n   }\n   completion(result)\n}\nlet parameters = OutgoingCallParameters(callType: .voip, callee: callee)\nsdk.placeCall(with: parameters, completion: completionBlock)\n//\u2026\n\n"})}),"\n",(0,c.jsx)(n.h3,{id:"receive-an-incoming-call",children:"Receive an incoming call"}),"\n",(0,c.jsxs)(n.p,{children:["When you configure the SDK for incoming calls, the client adopts the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"CallSetObserverProtocol"})})," protocol and registers the observer with the ",(0,c.jsx)(n.code,{children:"VoiceSDK"})," object:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"class MyVoiceSDKClient: CallSetObserverProtocol {\n//\u2026\n   func handleCallAdded(_ call: VoiceCall) {\n      if call.direction == .inbound {\n      // present UI\n      }\n   }\n//\u2026\n}\n\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"let client = MyVoiceSDKClient(...)\n//\u2026\nsdk.addObserver(client)\n\n"})}),"\n",(0,c.jsx)(n.h3,{id:"call-observer-protocols",children:"Call observer protocols"}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceCall"})})," object is observable."]}),"\n",(0,c.jsx)(n.p,{children:"The SDK client can subscribe for changes by adopting the following protocols:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceCallStateObserverProtocol"})})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceCallConnectionQualityObserverProtocol"})})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceCallMutedStateObserverProtocol"})})}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["and registering as an observer with the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceCall"})})," object:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"//\u2026\ncall.addObserver(client)\n//\u2026\n\n"})}),"\n",(0,c.jsx)(n.h3,{id:"mute-a-call",children:"Mute a call"}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceCall"})})," object has the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"muted"})})," property which enables call muting as follows:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"protocol VoiceCall: class {\n//\u2026\n   var muted: CallMutedState { get set }\n//\u2026  \n}\n\n"})}),"\n",(0,c.jsx)(n.p,{children:"You can mute (or unmute) the call by assigning the corresponding value to the property:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"call.muted = .on // .off\n\n"})}),"\n",(0,c.jsx)(n.h3,{id:"put-a-call-on-hold",children:"Put a call on hold"}),"\n",(0,c.jsxs)(n.p,{children:["Use the following ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"hold"})})," function for call holding:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"protocol VoiceCall: class {\n//\u2026\n   func hold(_ completion: ((CallActionCompletionStatus) -> Void)?)\n   func resume(_ completion: ((CallActionCompletionStatus) -> Void)?)\n//\u2026\n}\n\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"call.hold { status in\n   switch status {\n   //\n   case .done:\n   //\n   case .canceled:\n   //\n   case .failed:\n   }\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The execution of the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"hold (resume)"})})," operation implicitly triggers the call state change."]}),"\n",(0,c.jsx)(n.h3,{id:"hang-up-a-call",children:"Hang up a call"}),"\n",(0,c.jsxs)(n.p,{children:["Use the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"hangup"})})," function to end the call:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"protocol VoiceCall: class {\n//\u2026\n   func hangup(_ completion: ((CallActionCompletionStatus) -> Void)?)\n//\u2026\n}\n\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-swift",children:"call.hangup { status in\n   switch status {\n   case .done:\n   //\n   case .canceled:\n   //\n   case .failed:        \n   }\n}\n\n"})}),"\n",(0,c.jsxs)(n.p,{children:["On completion the call transitions to the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"disconnected"})})," state."]}),"\n",(0,c.jsxs)(n.p,{children:["Additionally, the Voice SDK removes the call from the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"calls"})})," list."]}),"\n",(0,c.jsx)(n.h4,{id:"push-notifications",children:"Push Notifications"}),"\n",(0,c.jsxs)(n.p,{children:["The Voice SDK handles ",(0,c.jsx)(n.strong,{children:"PushKit"})," notifications internally."]}),"\n",(0,c.jsxs)(n.p,{children:["However, for debugging purpose, the SDK exposes the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"pushToken"})})," property as part of the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"VoiceSDK"})})," object."]}),"\n",(0,c.jsxs)(n.p,{children:["Additionally, the client can monitor the push notification payload or observe the token change by using the ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"PushNotificationObserverProtocol"})})," protocol."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);